From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Taiyou06 <kaandindar21@gmail.com>
Date: Sun, 9 Feb 2025 02:46:09 +0100
Subject: [PATCH] Cache and optimize fluidOnEyes

TODO

diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index 2e63139dbf08c368c274aedb4d696e596517563d..198182a7c54691e0e61f9b2948704abab15d6a74 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -261,7 +261,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public boolean wasTouchingWater;
     protected Object2DoubleMap<TagKey<Fluid>> fluidHeight = new Object2DoubleArrayMap<>(2);
     protected boolean wasEyeInWater;
-    private final Set<TagKey<Fluid>> fluidOnEyes = new HashSet<>();
+    private final Set<TagKey<Fluid>> fluidOnEyes = new it.unimi.dsi.fastutil.objects.ObjectOpenHashSet<>();
     public int invulnerableTime;
     protected boolean firstTick = true;
     protected final SynchedEntityData entityData;
@@ -2002,9 +2002,12 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         }
     }
 
+    private Set<TagKey<Fluid>> cachedFluidOnEyes = Set.of();
+
     private void updateFluidOnEyes() {
         this.wasEyeInWater = this.isEyeInFluid(FluidTags.WATER);
         this.fluidOnEyes.clear();
+        this.cachedFluidOnEyes = Set.copyOf(this.fluidOnEyes); // Create immutable snapshot
         double eyeY = this.getEyeY();
         if (!(
             this.getVehicle() instanceof AbstractBoat abstractBoat
@@ -2097,7 +2100,7 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     }
 
     public boolean isEyeInFluid(TagKey<Fluid> fluidTag) {
-        return this.fluidOnEyes.contains(fluidTag);
+        return this.cachedFluidOnEyes.contains(fluidTag);
     }
 
     public boolean isInLava() {
