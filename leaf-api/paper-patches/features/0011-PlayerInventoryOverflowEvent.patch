From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dreeam <61569423+Dreeam-qwq@users.noreply.github.com>
Date: Wed, 19 Feb 2025 00:34:16 -0500
Subject: [PATCH] PlayerInventoryOverflowEvent


diff --git a/src/main/java/org/dreeam/event/player/PlayerInventoryOverflowEvent.java b/src/main/java/org/dreeam/event/player/PlayerInventoryOverflowEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..96dc6a56281339e0fcc7d7e532e46b0e7106c398
--- /dev/null
+++ b/src/main/java/org/dreeam/event/player/PlayerInventoryOverflowEvent.java
@@ -0,0 +1,81 @@
+package org.dreeam.event.player;
+
+import org.bukkit.entity.Player;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.player.PlayerEvent;
+import org.bukkit.inventory.Inventory;
+import org.bukkit.inventory.ItemStack;
+import org.jspecify.annotations.NullMarked;
+
+import java.util.Map;
+
+/**
+ * Called when a plugin uses {@link Inventory#addItem(ItemStack...)} to add items
+ * into player's inventory and the inventory becomes full.
+ * <p>
+ * Notice that, using this event is the worst option. It's better to handle
+ * those overflow / leftover items via {@link Inventory#addItem(ItemStack...)}
+ * logic directly.
+ * Also, See <a href="https://github.com/PaperMC/Paper/issues/11886">Paper#11886</a>
+ * for more.
+ */
+@NullMarked
+public class PlayerInventoryOverflowEvent extends PlayerEvent {
+
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+
+    private static boolean enabled = false;
+
+    private final Inventory inventory;
+    private final Map<Integer, ItemStack> overflowItemStacks;
+
+    public PlayerInventoryOverflowEvent(final Player player, final Map<Integer, ItemStack> overflowItemStacks) {
+        super(player);
+        this.inventory = player.getInventory();
+        this.overflowItemStacks = overflowItemStacks;
+    }
+
+    /**
+     * Gets player's inventory, which is full
+     *
+     * @return The player inventory.
+     */
+    public Inventory getPlayerInventory() {
+        return this.inventory;
+    }
+
+    /**
+     * Gets overflow items which cannot be added into
+     * the full inventory
+     *
+     * @return The overflow items.
+     */
+    public Map<Integer, ItemStack> getOverflowItemStacks() {
+        return this.overflowItemStacks;
+    }
+
+    /**
+     * Enables the PlayerInventoryOverflowEvent
+     */
+    public static void enable() {
+        enabled = true;
+    }
+
+    /**
+     * Gets the status of PlayerInventoryOverflowEvent
+     *
+     * @return The status of PlayerInventoryOverflowEvent.
+     */
+    public static boolean isEnabled() {
+        return enabled;
+    }
+
+    @Override
+    public HandlerList getHandlers() {
+        return HANDLER_LIST;
+    }
+
+    public static HandlerList getHandlerList() {
+        return HANDLER_LIST;
+    }
+}
