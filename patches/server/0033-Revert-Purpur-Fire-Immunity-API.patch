From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dreeam <61569423+Dreeam-qwq@users.noreply.github.com>
Date: Mon, 17 Jul 2023 07:54:17 +0800
Subject: [PATCH] Revert Purpur Fire Immunity API


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index eeb611aab2887fce1e5a15831da625d5766e0fc4..3cb1fedcf7302ee1bb024e2a2c010e489f9f5bc7 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -419,7 +419,6 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     public boolean freezeLocked = false; // Paper - Freeze Tick Lock API
     public boolean collidingWithWorldBorder; // Paper
     public boolean fixedPose = false; // Paper
-    public @Nullable Boolean immuneToFire = null; // Purpur - Fire immune API
     private CompoundTag leavesData = new CompoundTag(); // Leaves - Leaves ex data
 
     public void setOrigin(@javax.annotation.Nonnull Location location) {
@@ -1855,7 +1854,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
     }
 
     public boolean fireImmune() {
-        return this.immuneToFire != null ? immuneToFire : this.getType().fireImmune(); // Purpur - add fire immune API
+        return this.getType().fireImmune();
     }
 
     public boolean causeFallDamage(float fallDistance, float damageMultiplier, DamageSource damageSource) {
@@ -2533,11 +2532,6 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 nbt.putBoolean("Paper.FreezeLock", true);
             }
             // Paper end
-            // Purpur start
-            if (immuneToFire != null) {
-                nbt.putBoolean("Purpur.FireImmune", immuneToFire);
-            }
-            // Purpur end
             nbt.put("Leaves.Data", leavesData); // Leaves - leaves ex data
             return nbt;
         } catch (Throwable throwable) {
@@ -2707,11 +2701,6 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                 freezeLocked = nbt.getBoolean("Paper.FreezeLock");
             }
             // Paper end
-            // Purpur start
-            if (nbt.contains("Purpur.FireImmune")) {
-                immuneToFire = nbt.getBoolean("Purpur.FireImmune");
-            }
-            // Purpur end
             // Leaves start - leaves ex data
             if (nbt.contains("Leaves.Data")) {
                 leavesData = nbt.getCompound("Leaves.Data");
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 8973c8a3bad120e55269bf1b7b810284ad0fe14c..feeca8d318fa0b7b22e728baa3bf3269d42bf0a6 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -224,16 +224,6 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         this.entityType = (type != null) ? type : EntityType.UNKNOWN;
     }
 
-    @Override
-    public boolean isImmuneToFire() {
-        return getHandle().fireImmune();
-    }
-
-    @Override
-    public void setImmuneToFire(Boolean fireImmune) {
-        getHandle().immuneToFire = fireImmune;
-    }
-
     @Override
     public boolean isInDaylight() {
         return getHandle().isSunBurnTick();
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftItem.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftItem.java
index 4ffb4046b63cbc140c76721f51c9a7a09e81844d..8fcee0e426cd598ddfd7e12df4382d57d2016780 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftItem.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftItem.java
@@ -176,14 +176,9 @@ public class CraftItem extends CraftEntity implements Item {
         return item.immuneToExplosion;
     }
 
-    @Override
-    public void setImmuneToFire(@org.jetbrains.annotations.Nullable Boolean immuneToFire) {
-        item.immuneToFire = (immuneToFire != null && immuneToFire);
-    }
-
     @Override
     public void setImmuneToFire(boolean immuneToFire) {
-        this.setImmuneToFire((Boolean) immuneToFire);
+        item.immuneToFire = immuneToFire;
     }
 
     @Override
