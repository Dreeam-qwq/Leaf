From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <Blake.Galbreath@GMail.com>
Date: Thu, 10 Dec 2020 16:44:54 -0600
Subject: [PATCH] Purpur: Configurable entity base attributes

Original license: MIT
Original project: https://github.com/PurpurMC/Purpur

diff --git a/src/main/java/net/minecraft/core/BlockPos.java b/src/main/java/net/minecraft/core/BlockPos.java
index b1d12c78edf21cc29a9f9ca54e7957ddc8875ffb..a3e398d3bcc88f9c0feaa6ca8dc646f3c522c0a9 100644
--- a/src/main/java/net/minecraft/core/BlockPos.java
+++ b/src/main/java/net/minecraft/core/BlockPos.java
@@ -41,6 +41,12 @@ public class BlockPos extends Vec3i {
     private static final int X_OFFSET = 38;
     // Paper end
 
+    // Purpur start
+    public BlockPos(net.minecraft.world.entity.Entity entity) {
+        super(entity.getX(), entity.getY(), entity.getZ());
+    }
+    // Purpur end
+
     public BlockPos(int x, int y, int z) {
         super(x, y, z);
     }
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index b439a6033223269c94e988069c0df3ad6ba5da28..77d56be97ae9734316c9c1b97ed3812d88a31a75 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -155,7 +155,7 @@ import org.bukkit.plugin.PluginManager;
 // CraftBukkit end
 
 public abstract class Entity implements Nameable, EntityAccess, CommandSource {
-
+    public static javax.script.ScriptEngine scriptEngine = new javax.script.ScriptEngineManager().getEngineByName("rhino"); // Purpur
     // CraftBukkit start
     private static final int CURRENT_LEVEL = 2;
     public boolean preserveMotion = true; // Paper - keep initial motion on first setPositionRotation
diff --git a/src/main/java/net/minecraft/world/entity/GlowSquid.java b/src/main/java/net/minecraft/world/entity/GlowSquid.java
index c1e9b40a4a0f9cdc650caa88b5ea132e06ee2496..66000b82f983627d7bfd8d41aa1d2e3074ff2b34 100644
--- a/src/main/java/net/minecraft/world/entity/GlowSquid.java
+++ b/src/main/java/net/minecraft/world/entity/GlowSquid.java
@@ -15,6 +15,7 @@ import net.minecraft.world.entity.animal.Squid;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.Blocks;
+import org.dreeam.leaf.LeafConfig;
 
 public class GlowSquid extends Squid {
     private static final EntityDataAccessor<Integer> DATA_DARK_TICKS_REMAINING = SynchedEntityData.defineId(GlowSquid.class, EntityDataSerializers.INT);
@@ -23,6 +24,13 @@ public class GlowSquid extends Squid {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.glowSquidMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected ParticleOptions getInkParticle() {
         return ParticleTypes.GLOW_SQUID_INK;
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 87499e82e80a8b7d6d8ca6eeaa1819b74fcf1665..7f69b5f4e44f6fa2981c16adf3b4c6e48ce84974 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -290,6 +290,7 @@ public abstract class LivingEntity extends Entity {
         this.useItem = ItemStack.EMPTY;
         this.lastClimbablePos = Optional.empty();
         this.attributes = new AttributeMap(DefaultAttributes.getSupplier(type));
+        this.initAttributes(); // Purpur
         this.craftAttributes = new CraftAttributeMap(this.attributes); // CraftBukkit
         // CraftBukkit - setHealth(getMaxHealth()) inlined and simplified to skip the instanceof check for EntityPlayer, as getBukkitEntity() is not initialized in constructor
         this.entityData.set(LivingEntity.DATA_HEALTH_ID, (float) this.getAttribute(Attributes.MAX_HEALTH).getValue());
@@ -305,6 +306,8 @@ public abstract class LivingEntity extends Entity {
         this.brain = this.makeBrain(new Dynamic(dynamicopsnbt, (Tag) dynamicopsnbt.createMap((Map) ImmutableMap.of(dynamicopsnbt.createString("memories"), (Tag) dynamicopsnbt.emptyMap()))));
     }
 
+    protected void initAttributes() {}// Purpur
+
     public Brain<?> getBrain() {
         return this.brain;
     }
diff --git a/src/main/java/net/minecraft/world/entity/ambient/Bat.java b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
index bf62750c31ffba6c2aa4f6d17c1c71c62385e584..585fe50c96de174780f6580ff9c6f8c11c5b4415 100644
--- a/src/main/java/net/minecraft/world/entity/ambient/Bat.java
+++ b/src/main/java/net/minecraft/world/entity/ambient/Bat.java
@@ -28,6 +28,7 @@ import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
 import org.bukkit.craftbukkit.event.CraftEventFactory; // CraftBukkit
+import org.dreeam.leaf.LeafConfig;
 
 public class Bat extends AmbientCreature {
 
@@ -47,6 +48,20 @@ public class Bat extends AmbientCreature {
 
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.batMaxHealth);
+        this.getAttribute(Attributes.FOLLOW_RANGE).setBaseValue(LeafConfig.batFollowRange);
+        this.getAttribute(Attributes.KNOCKBACK_RESISTANCE).setBaseValue(LeafConfig.batKnockbackResistance);
+        this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue(LeafConfig.batMovementSpeed);
+        this.getAttribute(Attributes.FLYING_SPEED).setBaseValue(LeafConfig.batFlyingSpeed);
+        this.getAttribute(Attributes.ARMOR).setBaseValue(LeafConfig.batArmor);
+        this.getAttribute(Attributes.ARMOR_TOUGHNESS).setBaseValue(LeafConfig.batArmorToughness);
+        this.getAttribute(Attributes.ATTACK_KNOCKBACK).setBaseValue(LeafConfig.batAttackKnockback);
+    }
+    // Purpur end
+
     @Override
     public boolean isFlapping() {
         return !this.isResting() && this.tickCount % Bat.TICKS_PER_FLAP == 0;
diff --git a/src/main/java/net/minecraft/world/entity/animal/Bee.java b/src/main/java/net/minecraft/world/entity/animal/Bee.java
index 337a88a7cd6445004d005ef8d56af1b1cdf800d9..23683d8052f9252ca33b294da61755168e5b2691 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Bee.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Bee.java
@@ -90,6 +90,7 @@ import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.level.pathfinder.Path;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Bee extends Animal implements NeutralMob, FlyingAnimal {
 
@@ -167,6 +168,13 @@ public class Bee extends Animal implements NeutralMob, FlyingAnimal {
         this.setPathfindingMalus(BlockPathTypes.FENCE, -1.0F);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.beeMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void defineSynchedData() {
         super.defineSynchedData();
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cat.java b/src/main/java/net/minecraft/world/entity/animal/Cat.java
index 0114c1cf3b6b0500149a77ebc190cb7fa2832184..e3c632040971c759c2ca49b81bc1d49db3af797f 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cat.java
@@ -71,6 +71,7 @@ import net.minecraft.world.level.storage.loot.LootTable;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParamSets;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParams;
 import net.minecraft.world.phys.AABB;
+import org.dreeam.leaf.LeafConfig;
 
 public class Cat extends TamableAnimal implements VariantHolder<CatVariant> {
 
@@ -96,6 +97,13 @@ public class Cat extends TamableAnimal implements VariantHolder<CatVariant> {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.catMaxHealth);
+    }
+    // Purpur end
+
     public ResourceLocation getResourceLocation() {
         return this.getVariant().texture();
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Chicken.java b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
index 72edd4d0698dd18cf2d91c39d68d3b3302d86d62..b640b37f6408db34f570e73e1b22abe9e4d095d0 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Chicken.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Chicken.java
@@ -35,6 +35,7 @@ import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Chicken extends Animal {
 
@@ -54,6 +55,13 @@ public class Chicken extends Animal {
         this.setPathfindingMalus(BlockPathTypes.WATER, 0.0F);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.chickenMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new FloatGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cod.java b/src/main/java/net/minecraft/world/entity/animal/Cod.java
index 824e5e4fe7619ae46061c3c978c9a044db8c84ab..4372f03e485d809698387675f0cfce1835b6fcef 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cod.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cod.java
@@ -7,12 +7,20 @@ import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
+import org.dreeam.leaf.LeafConfig;
 
 public class Cod extends AbstractSchoolingFish {
     public Cod(EntityType<? extends Cod> type, Level world) {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.codMaxHealth);
+    }
+    // Purpur end
+
     @Override
     public ItemStack getBucketItemStack() {
         return new ItemStack(Items.COD_BUCKET);
diff --git a/src/main/java/net/minecraft/world/entity/animal/Cow.java b/src/main/java/net/minecraft/world/entity/animal/Cow.java
index abae850f5babfd75c7547e88fb7637e9775991d3..f0ec558c6b2377f06d0540254f0a158ebc24884f 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Cow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Cow.java
@@ -33,6 +33,7 @@ import net.minecraft.world.level.block.state.BlockState;
 // CraftBukkit start
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class Cow extends Animal {
@@ -41,6 +42,13 @@ public class Cow extends Animal {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.cowMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new FloatGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
index 3f100d847fbce6db5b625e99c4f3694576237372..efb9da85eec454751659c76e39b9589563314a76 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Dolphin.java
@@ -60,6 +60,7 @@ import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.pathfinder.PathComputationType;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Dolphin extends WaterAnimal {
 
@@ -86,6 +87,13 @@ public class Dolphin extends WaterAnimal {
         this.setCanPickUpLoot(true);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.dolphinMaxHealth);
+    }
+    // Purpur end
+
     @Nullable
     @Override
     public SpawnGroupData finalizeSpawn(ServerLevelAccessor world, DifficultyInstance difficulty, MobSpawnType spawnReason, @Nullable SpawnGroupData entityData, @Nullable CompoundTag entityNbt) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Fox.java b/src/main/java/net/minecraft/world/entity/animal/Fox.java
index bc2b98c9f34ad2b289f5da91d704bd836edec8c1..936df0887e76d2f208d66f5e55fd6271b01d5763 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Fox.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Fox.java
@@ -89,6 +89,7 @@ import net.minecraft.world.level.block.SweetBerryBushBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Fox extends Animal implements VariantHolder<Fox.Type> {
 
@@ -140,6 +141,13 @@ public class Fox extends Animal implements VariantHolder<Fox.Type> {
         this.setCanPickUpLoot(true);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.foxMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void defineSynchedData() {
         super.defineSynchedData();
diff --git a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
index e73acfa2f5a4066fa1beee1758082a2fe97a43b3..8c7cf71a4f0474e3615bcf7be2fff91e19ea9f82 100644
--- a/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/IronGolem.java
@@ -52,6 +52,7 @@ import net.minecraft.world.level.NaturalSpawner;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.material.Fluids;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class IronGolem extends AbstractGolem implements NeutralMob {
 
@@ -69,6 +70,13 @@ public class IronGolem extends AbstractGolem implements NeutralMob {
         this.maxUpStep = 1.0F;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.ironGolemMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new MeleeAttackGoal(this, 1.0D, true));
diff --git a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
index 8ee1a0626e5a6c0ad19a25b8f476a2e12d69668d..8c59ac6f7c1d83051dde53dd48492694f4e33b32 100644
--- a/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
+++ b/src/main/java/net/minecraft/world/entity/animal/MushroomCow.java
@@ -47,6 +47,7 @@ import org.bukkit.Bukkit;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.entity.EntityDropItemEvent;
 import org.bukkit.event.entity.EntityTransformEvent;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class MushroomCow extends Cow implements Shearable, VariantHolder<MushroomCow.MushroomType> {
@@ -63,6 +64,13 @@ public class MushroomCow extends Cow implements Shearable, VariantHolder<Mushroo
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.mooshroomMaxHealth);
+    }
+    // Purpur end
+
     @Override
     public float getWalkTargetValue(BlockPos pos, LevelReader world) {
         return world.getBlockState(pos.below()).is(Blocks.MYCELIUM) ? 10.0F : world.getPathfindingCostFromLightLevels(pos);
diff --git a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
index 5ad029e3c1eaeae33784b55d04181cdd119ef8c0..e0e7ef475480560e00c57f3c24d1e52766186ef7 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Ocelot.java
@@ -50,6 +50,7 @@ import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Ocelot extends Animal {
 
@@ -68,6 +69,13 @@ public class Ocelot extends Animal {
         this.reassessTrustingGoals();
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.ocelotMaxHealth);
+    }
+    // Purpur end
+
     public boolean isTrusting() {
         return (Boolean) this.entityData.get(Ocelot.DATA_TRUSTING);
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Panda.java b/src/main/java/net/minecraft/world/entity/animal/Panda.java
index 9c1e02c3a990cd0f8bba1c84c170b438278c02a7..57118776da4c220b405139be7678e19d1e4e5194 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Panda.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Panda.java
@@ -65,6 +65,7 @@ import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.Vec3;
 import org.bukkit.event.entity.EntityTargetEvent; // CraftBukkit
+import org.dreeam.leaf.LeafConfig;
 
 public class Panda extends Animal {
 
@@ -108,6 +109,14 @@ public class Panda extends Animal {
 
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.pandaMaxHealth);
+        setAttributes();
+    }
+    // Purpur end
+
     @Override
     public boolean canTakeItem(ItemStack stack) {
         EquipmentSlot enumitemslot = Mob.getEquipmentSlotForItem(stack);
@@ -607,7 +616,10 @@ public class Panda extends Animal {
 
     public void setAttributes() {
         if (this.isWeak()) {
-            this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(10.0D);
+            // Purpur start
+            net.minecraft.world.entity.ai.attributes.AttributeInstance maxHealth = this.getAttribute(Attributes.MAX_HEALTH);
+            maxHealth.setBaseValue(maxHealth.getValue() / 2);
+            // Purpur end
         }
 
         if (this.isLazy()) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Parrot.java b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
index 2d9aa961df034eab21ecfdb6e6d0ce7cf013505d..8acd3a9fbedca5af0ad8351605edba4de10e41cf 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Parrot.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Parrot.java
@@ -70,6 +70,7 @@ import net.minecraft.world.level.block.LeavesBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot.Variant>, FlyingAnimal {
 
@@ -135,6 +136,13 @@ public class Parrot extends ShoulderRidingEntity implements VariantHolder<Parrot
         this.setPathfindingMalus(BlockPathTypes.COCOA, -1.0F);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.parrotMaxHealth);
+    }
+    // Purpur end
+
     @Nullable
     @Override
     public SpawnGroupData finalizeSpawn(ServerLevelAccessor world, DifficultyInstance difficulty, MobSpawnType spawnReason, @Nullable SpawnGroupData entityData, @Nullable CompoundTag entityNbt) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pig.java b/src/main/java/net/minecraft/world/entity/animal/Pig.java
index fc29107ee256af2b5f2e481f17ade6cfcaa101ae..416850a6ae9f6dca6b24878d48ec608e0ab9e720 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pig.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pig.java
@@ -50,6 +50,7 @@ import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 // CraftBukkit start
 import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class Pig extends Animal implements ItemSteerable, Saddleable {
@@ -64,6 +65,13 @@ public class Pig extends Animal implements ItemSteerable, Saddleable {
         this.steering = new ItemBasedSteering(this.entityData, Pig.DATA_BOOST_TIME, Pig.DATA_SADDLE_ID);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.pigMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new FloatGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/animal/PolarBear.java b/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
index e83f7967e8b975cd77535d0097c35936c7d4b9bb..a8ec97c92c89dc89014eececc28a9cfce3683763 100644
--- a/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
+++ b/src/main/java/net/minecraft/world/entity/animal/PolarBear.java
@@ -49,6 +49,7 @@ import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.block.state.BlockState;
+import org.dreeam.leaf.LeafConfig;
 
 public class PolarBear extends Animal implements NeutralMob {
     private static final EntityDataAccessor<Boolean> DATA_STANDING_ID = SynchedEntityData.defineId(PolarBear.class, EntityDataSerializers.BOOLEAN);
@@ -65,6 +66,13 @@ public class PolarBear extends Animal implements NeutralMob {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.polarBearMaxHealth);
+    }
+    // Purpur end
+
     @Nullable
     @Override
     public AgeableMob getBreedOffspring(ServerLevel world, AgeableMob entity) {
diff --git a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
index ce02552c1b3c62cf9f48425838a129a3ec40a049..ed18f2fd07e0db865c1899406856f1bafdf65d06 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Pufferfish.java
@@ -26,6 +26,7 @@ import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
+import org.dreeam.leaf.LeafConfig;
 
 public class Pufferfish extends AbstractFish {
 
@@ -45,6 +46,13 @@ public class Pufferfish extends AbstractFish {
         this.refreshDimensions();
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.pufferfishMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void defineSynchedData() {
         super.defineSynchedData();
diff --git a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
index 7a1fcae6de2dd8247fcb1f1612122edf8f56965a..e92702c5510683bf32e154fd8d3c6945f5a6dc77 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Rabbit.java
@@ -65,6 +65,7 @@ import net.minecraft.world.level.block.CarrotBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.pathfinder.Path;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Rabbit extends Animal implements VariantHolder<Rabbit.Variant> {
 
@@ -91,6 +92,13 @@ public class Rabbit extends Animal implements VariantHolder<Rabbit.Variant> {
         this.initializePathFinderGoals(); // CraftBukkit - moved code
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.rabbitMaxHealth);
+    }
+    // Purpur end
+
     // CraftBukkit start - code from constructor
     public void initializePathFinderGoals(){
         this.setSpeedModifier(0.0D);
diff --git a/src/main/java/net/minecraft/world/entity/animal/Salmon.java b/src/main/java/net/minecraft/world/entity/animal/Salmon.java
index 0af79daa357f53a8871e293b57e16c099e5d3f64..92083d6ce5a2c620255406142674533bf04c3889 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Salmon.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Salmon.java
@@ -7,12 +7,20 @@ import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
+import org.dreeam.leaf.LeafConfig;
 
 public class Salmon extends AbstractSchoolingFish {
     public Salmon(EntityType<? extends Salmon> type, Level world) {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.salmonMaxHealth);
+    }
+    // Purpur end
+
     @Override
     public int getMaxSchoolSize() {
         return 5;
diff --git a/src/main/java/net/minecraft/world/entity/animal/Sheep.java b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
index ef70179f71eb3f63f707d990bfc4d55101c28c4d..f8483ca89dc9f0e9765d26d1a9fccf490198ba88 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Sheep.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Sheep.java
@@ -67,6 +67,7 @@ import net.minecraft.world.item.Item;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.entity.SheepRegrowWoolEvent;
 import org.bukkit.inventory.InventoryView;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class Sheep extends Animal implements Shearable {
@@ -116,6 +117,13 @@ public class Sheep extends Animal implements Shearable {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.sheepMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.eatBlockGoal = new EatBlockGoal(this);
diff --git a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
index 35e53663e4a6c4d56ec4577d08e7b040cc0c720f..b3f36e81fae2a6fe1c76675fbf6af32693cbda37 100644
--- a/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
+++ b/src/main/java/net/minecraft/world/entity/animal/SnowGolem.java
@@ -42,6 +42,7 @@ import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.Vec3;
 // CraftBukkit start
 import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackMob {
@@ -54,6 +55,13 @@ public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackM
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.snowGolemMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new RangedAttackGoal(this, 1.25D, 20, 10.0F));
diff --git a/src/main/java/net/minecraft/world/entity/animal/Squid.java b/src/main/java/net/minecraft/world/entity/animal/Squid.java
index a51424d29ac353cf1bec4d1484db0acb63bebba5..67e46d5e6135060479c1a1174b6c1f735120bbcf 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Squid.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Squid.java
@@ -26,6 +26,7 @@ import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.material.FluidState;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Squid extends WaterAnimal {
 
@@ -50,6 +51,13 @@ public class Squid extends WaterAnimal {
         this.tentacleSpeed = 1.0F / (this.random.nextFloat() + 1.0F) * 0.2F;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.squidMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new Squid.SquidRandomMovementGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java b/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
index b05b560b7570e97bc234b75f26233909fcf575b3..a6a9c88e54fc71469d894da19710f65eb907fb5f 100644
--- a/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
+++ b/src/main/java/net/minecraft/world/entity/animal/TropicalFish.java
@@ -31,6 +31,7 @@ import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.Blocks;
+import org.dreeam.leaf.LeafConfig;
 
 public class TropicalFish extends AbstractSchoolingFish implements VariantHolder<TropicalFish.Pattern> {
     public static final String BUCKET_VARIANT_TAG = "BucketVariantTag";
@@ -42,6 +43,13 @@ public class TropicalFish extends AbstractSchoolingFish implements VariantHolder
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.tropicalFishMaxHealth);
+    }
+    // Purpur end
+
     public static String getPredefinedName(int variant) {
         return "entity.minecraft.tropical_fish.predefined." + variant;
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Turtle.java b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
index 25503678e7d049a8b3172cfad8a5606958c32302..57f176978bb683d756af9f7cc1a1b2c8d0176370 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Turtle.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Turtle.java
@@ -57,6 +57,7 @@ import net.minecraft.world.level.block.TurtleEggBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Turtle extends Animal {
 
@@ -82,6 +83,13 @@ public class Turtle extends Animal {
         this.maxUpStep = 1.0F;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.turtleMaxHealth);
+    }
+    // Purpur end
+
     public void setHomePos(BlockPos pos) {
         this.entityData.set(Turtle.HOME_POS, pos.immutable()); // Paper - called with mutablepos...
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/Wolf.java b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
index a6a50eb4f4ac85751071571876ac804d44ee1ee6..87dd2aebad6f13fb7782b5c5d2f973849c504c06 100644
--- a/src/main/java/net/minecraft/world/entity/animal/Wolf.java
+++ b/src/main/java/net/minecraft/world/entity/animal/Wolf.java
@@ -71,6 +71,7 @@ import net.minecraft.world.phys.Vec3;
 // CraftBukkit start
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.entity.EntityTargetEvent.TargetReason;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class Wolf extends TamableAnimal implements NeutralMob {
@@ -102,6 +103,13 @@ public class Wolf extends TamableAnimal implements NeutralMob {
         this.setPathfindingMalus(BlockPathTypes.DANGER_POWDER_SNOW, -1.0F);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.wolfMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new FloatGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java b/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
index ebae68d28e9c97dcdf9630db124ff1a96adcd566..0c5c89fee30c50f2625ed0a345d88aaa7c055e02 100644
--- a/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
+++ b/src/main/java/net/minecraft/world/entity/animal/axolotl/Axolotl.java
@@ -64,6 +64,7 @@ import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 import org.joml.Vector3f;
 
 public class Axolotl extends Animal implements LerpingModel, VariantHolder<Axolotl.Variant>, Bucketable {
@@ -98,6 +99,13 @@ public class Axolotl extends Animal implements LerpingModel, VariantHolder<Axolo
         this.maxUpStep = 1.0F;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.axolotlMaxHealth);
+    }
+    // Purpur end
+
     @Override
     public Map<String, Vector3f> getModelRotationValues() {
         return this.modelRotationValues;
diff --git a/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java b/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
index 156323ebdb823d59bc8c23b675fb59da2133d21f..fcac518b1c558dbebb8e924dafe178eeaf81fbdb 100644
--- a/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
+++ b/src/main/java/net/minecraft/world/entity/animal/camel/Camel.java
@@ -49,6 +49,7 @@ import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.SoundType;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Camel extends AbstractHorse implements PlayerRideableJumping, RiderShieldingMount, Saddleable {
     public static final Ingredient TEMPTATION_ITEM = Ingredient.of(Items.CACTUS);
@@ -290,6 +291,23 @@ public class Camel extends AbstractHorse implements PlayerRideableJumping, Rider
         return this.dashCooldown;
     }
 
+    // Purpur start
+    @Override
+    public float generateRandomMaxHealth(net.minecraft.util.RandomSource random) {
+        return (float) generateRandomMaxHealth(LeafConfig.camelMaxHealthMin, LeafConfig.camelMaxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(net.minecraft.util.RandomSource random) {
+        return generateRandomJumpStrength(LeafConfig.camelJumpStrengthMin, LeafConfig.camelJumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(net.minecraft.util.RandomSource random) {
+        return generateRandomSpeed(LeafConfig.camelMovementSpeedMin, LeafConfig.camelMovementSpeedMax);
+    }
+    // Purpur end
+
     @Override
     protected SoundEvent getAmbientSound() {
         return SoundEvents.CAMEL_AMBIENT;
diff --git a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
index c42e9924b417ef0b2a0f6a325357d59cb3628edf..70fe75ac2881504809eface542dc3eddfe262386 100644
--- a/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
+++ b/src/main/java/net/minecraft/world/entity/animal/goat/Goat.java
@@ -56,6 +56,7 @@ import net.minecraft.world.phys.Vec3;
 // CraftBukkit start
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class Goat extends Animal {
@@ -81,6 +82,13 @@ public class Goat extends Animal {
         this.setPathfindingMalus(BlockPathTypes.DANGER_POWDER_SNOW, -1.0F);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.goatMaxHealth);
+    }
+    // Purpur end
+
     public ItemStack createHorn() {
         RandomSource randomsource = RandomSource.create((long) this.getUUID().hashCode());
         TagKey<Instrument> tagkey = this.isScreamingGoat() ? InstrumentTags.SCREAMING_GOAT_HORNS : InstrumentTags.REGULAR_GOAT_HORNS;
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
index 72d660cd2ade39335024897cffb8b8a151a7cb71..a9b189e9bf420cdcf3ec018f5099e87f3a17db69 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/AbstractHorse.java
@@ -122,6 +122,34 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
         this.createInventory();
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(this.generateRandomMaxHealth(this.random));
+        this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue(this.generateRandomSpeed(this.random));
+        this.getAttribute(Attributes.JUMP_STRENGTH).setBaseValue(this.generateRandomJumpStrength(this.random));
+    }
+
+    protected double generateRandomMaxHealth(double min, double max) {
+        if (min == max) return min;
+        int diff = Mth.floor(max - min);
+        double base = max - diff;
+        int first = Mth.floor((double) diff / 2);
+        int rest = diff - first;
+        return base + random.nextInt(first + 1) + random.nextInt(rest + 1);
+    }
+
+    protected double generateRandomJumpStrength(double min, double max) {
+        if (min == max) return min;
+        return min + (max - min) * this.random.nextDouble();
+    }
+
+    protected double generateRandomSpeed(double min, double max) {
+        if (min == max) return min;
+        return min + (max - min) * this.random.nextDouble();
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new PanicGoal(this, 1.2D));
@@ -1200,7 +1228,7 @@ public abstract class AbstractHorse extends Animal implements ContainerListener,
             entityData = new AgeableMob.AgeableMobGroupData(0.2F);
         }
 
-        this.randomizeAttributes(world.getRandom());
+        // this.randomizeAttributes(world.getRandom()); // Purpur - replaced by initAttributes()
         return super.finalizeSpawn(world, difficulty, spawnReason, (SpawnGroupData) entityData, entityNbt);
     }
 
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java b/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
index e0dfee0e0ce091d5ae0ec740e939c2c50915c104..965b71337bc6c1467ba657c13dcdfc45d4b68dac 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Donkey.java
@@ -9,12 +9,30 @@ import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.animal.Animal;
 import net.minecraft.world.level.Level;
+import org.dreeam.leaf.LeafConfig;
 
 public class Donkey extends AbstractChestedHorse {
     public Donkey(EntityType<? extends Donkey> type, Level world) {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public float generateRandomMaxHealth(net.minecraft.util.RandomSource random) {
+        return (float) generateRandomMaxHealth(LeafConfig.donkeyMaxHealthMin, LeafConfig.donkeyMaxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(net.minecraft.util.RandomSource random) {
+        return generateRandomJumpStrength(LeafConfig.donkeyJumpStrengthMin, LeafConfig.donkeyJumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(net.minecraft.util.RandomSource random) {
+        return generateRandomSpeed(LeafConfig.donkeyMovementSpeedMin, LeafConfig.donkeyMovementSpeedMax);
+    }
+    // Purpur end
+
     @Override
     protected SoundEvent getAmbientSound() {
         return SoundEvents.DONKEY_AMBIENT;
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java b/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
index 97a92b5576da2f8572a71cab42c40d1368ecb300..bbaeb048a14da06179eb8d33eba11ec8740597fc 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Horse.java
@@ -31,6 +31,7 @@ import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.SoundType;
+import org.dreeam.leaf.LeafConfig;
 
 public class Horse extends AbstractHorse implements VariantHolder<Variant> {
     private static final UUID ARMOR_MODIFIER_UUID = UUID.fromString("556E1665-8B10-40C8-8F9D-CF9B1667F295");
@@ -40,6 +41,23 @@ public class Horse extends AbstractHorse implements VariantHolder<Variant> {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public float generateRandomMaxHealth(RandomSource random) {
+        return (float) generateRandomMaxHealth(LeafConfig.horseMaxHealthMin, LeafConfig.horseMaxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(RandomSource random) {
+        return generateRandomJumpStrength(LeafConfig.horseJumpStrengthMin, LeafConfig.horseJumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(RandomSource random) {
+        return generateRandomSpeed(LeafConfig.horseMovementSpeedMin, LeafConfig.horseMovementSpeedMax);
+    }
+    // Purpur end
+
     @Override
     protected void randomizeAttributes(RandomSource random) {
         this.getAttribute(Attributes.MAX_HEALTH).setBaseValue((double)this.generateRandomMaxHealth(random));
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
index 7ae0e4b3aa8e861500ddc7b38aa671258b532fcd..d425f8bc8078cb3d489bd8ef9943a36abfd90a4b 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Llama.java
@@ -60,6 +60,7 @@ import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.WoolCarpetBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Llama extends AbstractChestedHorse implements VariantHolder<Llama.Variant>, RangedAttackMob {
 
@@ -78,6 +79,23 @@ public class Llama extends AbstractChestedHorse implements VariantHolder<Llama.V
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public float generateRandomMaxHealth(RandomSource random) {
+        return (float) generateRandomMaxHealth(LeafConfig.llamaMaxHealthMin, LeafConfig.llamaMaxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(RandomSource random) {
+        return generateRandomJumpStrength(LeafConfig.llamaJumpStrengthMin, LeafConfig.llamaJumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(RandomSource random) {
+        return generateRandomSpeed(LeafConfig.llamaMovementSpeedMin, LeafConfig.llamaMovementSpeedMax);
+    }
+    // Purpur end
+
     public boolean isTraderLlama() {
         return false;
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java b/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
index a6601f70890f90691923c0e6a9f10ea597ccabc2..f47b3dc2e3b0595e93a045bbcd00ba6efdb91b76 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/Mule.java
@@ -8,12 +8,30 @@ import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.AgeableMob;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.level.Level;
+import org.dreeam.leaf.LeafConfig;
 
 public class Mule extends AbstractChestedHorse {
     public Mule(EntityType<? extends Mule> type, Level world) {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public float generateRandomMaxHealth(net.minecraft.util.RandomSource random) {
+        return (float) generateRandomMaxHealth(LeafConfig.muleMaxHealthMin, LeafConfig.muleMaxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(net.minecraft.util.RandomSource random) {
+        return generateRandomJumpStrength(LeafConfig.muleJumpStrengthMin, LeafConfig.muleJumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(net.minecraft.util.RandomSource random) {
+        return generateRandomSpeed(LeafConfig.muleMovementSpeedMin, LeafConfig.muleMovementSpeedMax);
+    }
+    // Purpur end
+
     @Override
     protected SoundEvent getAmbientSound() {
         return SoundEvents.MULE_AMBIENT;
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
index 5771e262bde9558e2699f689d9dc045600192c88..b86174d3727fbad8a8a2ccfd214c1c6c932ee013 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/SkeletonHorse.java
@@ -17,6 +17,7 @@ import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
+import org.dreeam.leaf.LeafConfig;
 
 public class SkeletonHorse extends AbstractHorse {
     private final SkeletonTrapGoal skeletonTrapGoal = new SkeletonTrapGoal(this);
@@ -28,6 +29,23 @@ public class SkeletonHorse extends AbstractHorse {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public float generateRandomMaxHealth(RandomSource random) {
+        return (float) generateRandomMaxHealth(LeafConfig.skeletonHorseMaxHealthMin, LeafConfig.skeletonHorseMaxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(RandomSource random) {
+        return generateRandomJumpStrength(LeafConfig.skeletonHorseJumpStrengthMin, LeafConfig.skeletonHorseJumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(RandomSource random) {
+        return generateRandomSpeed(LeafConfig.skeletonHorseMovementSpeedMin, LeafConfig.skeletonHorseMovementSpeedMax);
+    }
+    // Purpur end
+
     public static AttributeSupplier.Builder createAttributes() {
         return createBaseHorseAttributes().add(Attributes.MAX_HEALTH, 15.0D).add(Attributes.MOVEMENT_SPEED, (double)0.2F);
     }
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java b/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
index 691f85a508c0b79b95b88c7e3118f02ec92a5123..18dcda938845d77ee126158741ed6945a32de4ac 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/TraderLlama.java
@@ -18,6 +18,7 @@ import net.minecraft.world.entity.npc.WanderingTrader;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
+import org.dreeam.leaf.LeafConfig;
 
 public class TraderLlama extends Llama {
 
@@ -27,6 +28,23 @@ public class TraderLlama extends Llama {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public float generateRandomMaxHealth(net.minecraft.util.RandomSource random) {
+        return (float) generateRandomMaxHealth(LeafConfig.traderLlamaMaxHealthMin, LeafConfig.traderLlamaMaxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(net.minecraft.util.RandomSource random) {
+        return generateRandomJumpStrength(LeafConfig.traderLlamaJumpStrengthMin, LeafConfig.traderLlamaJumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(net.minecraft.util.RandomSource random) {
+        return generateRandomSpeed(LeafConfig.traderLlamaMovementSpeedMin, LeafConfig.traderLlamaMovementSpeedMax);
+    }
+    // Purpur end
+
     @Override
     public boolean isTraderLlama() {
         return true;
diff --git a/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java b/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
index fccfb5f55277d39a1dbd8ab8060c8664f5a23e13..ad98c1edcca695f05f33084977e7bccb07f985a0 100644
--- a/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
+++ b/src/main/java/net/minecraft/world/entity/animal/horse/ZombieHorse.java
@@ -15,12 +15,30 @@ import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
+import org.dreeam.leaf.LeafConfig;
 
 public class ZombieHorse extends AbstractHorse {
     public ZombieHorse(EntityType<? extends ZombieHorse> type, Level world) {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public float generateRandomMaxHealth(RandomSource random) {
+        return (float) generateRandomMaxHealth(LeafConfig.zombieHorseMaxHealthMin, LeafConfig.zombieHorseMaxHealthMax);
+    }
+
+    @Override
+    public double generateRandomJumpStrength(RandomSource random) {
+        return generateRandomJumpStrength(LeafConfig.zombieHorseJumpStrengthMin, LeafConfig.zombieHorseJumpStrengthMax);
+    }
+
+    @Override
+    public double generateRandomSpeed(RandomSource random) {
+        return generateRandomSpeed(LeafConfig.zombieHorseMovementSpeedMin, LeafConfig.zombieHorseMovementSpeedMax);
+    }
+    // Purpur end
+
     public static AttributeSupplier.Builder createAttributes() {
         return createBaseHorseAttributes().add(Attributes.MAX_HEALTH, 15.0D).add(Attributes.MOVEMENT_SPEED, (double)0.2F);
     }
diff --git a/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java b/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
index c7caaebfb4b9f28cbe700d88fdcf232a500e8ca7..f4369a1e3c09d8b4cc171463a109be9c03264e72 100644
--- a/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
+++ b/src/main/java/net/minecraft/world/entity/boss/enderdragon/EnderDragon.java
@@ -48,6 +48,7 @@ import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParams;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 import org.slf4j.Logger;
 
 // CraftBukkit start
@@ -119,6 +120,13 @@ public class EnderDragon extends Mob implements Enemy {
         this.phaseManager = new EnderDragonPhaseManager(this);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.enderDragonMaxHealth);
+    }
+    // Purpur end
+
     public static AttributeSupplier.Builder createAttributes() {
         return Mob.createMobAttributes().add(Attributes.MAX_HEALTH, 200.0D);
     }
diff --git a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
index b781c849737225c00f1dd8d45a6d08cebc000263..9a8b25c461511e529f85a8263a3fffc0fead73c7 100644
--- a/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
+++ b/src/main/java/net/minecraft/world/entity/boss/wither/WitherBoss.java
@@ -61,6 +61,7 @@ import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.entity.EntityRegainHealthEvent;
 import org.bukkit.event.entity.EntityTargetEvent;
 import org.bukkit.event.entity.ExplosionPrimeEvent;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob {
@@ -97,6 +98,13 @@ public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob
         this.xpReward = 50;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.witherMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected PathNavigation createNavigation(Level world) {
         FlyingPathNavigation navigationflying = new FlyingPathNavigation(this, world);
@@ -295,7 +303,7 @@ public class WitherBoss extends Monster implements PowerableMob, RangedAttackMob
 
             this.setInvulnerableTicks(i);
             if (this.tickCount % 10 == 0) {
-                this.heal(10.0F, EntityRegainHealthEvent.RegainReason.WITHER_SPAWN); // CraftBukkit
+                this.heal(this.getMaxHealth() / 33, EntityRegainHealthEvent.RegainReason.WITHER_SPAWN); // CraftBukkit // Purpur
             }
 
         } else {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Blaze.java b/src/main/java/net/minecraft/world/entity/monster/Blaze.java
index 4595b734abb88df7da6dddf7b24c6c5ffcf6556a..3da2f98cf5e6ae05bb299220482c22e4b6ef7410 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Blaze.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Blaze.java
@@ -24,6 +24,7 @@ import net.minecraft.world.entity.projectile.SmallFireball;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Blaze extends Monster {
     private float allowedHeightOffset = 0.5F;
@@ -39,6 +40,13 @@ public class Blaze extends Monster {
         this.xpReward = 10;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.blazeMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(4, new Blaze.BlazeAttackGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java b/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
index d980b906d9206560741576fa4153c57212f307a0..0432a3eb9d58e3492e9684f8ade2657a0252401c 100644
--- a/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/CaveSpider.java
@@ -17,6 +17,7 @@ import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
+import org.dreeam.leaf.LeafConfig;
 
 public class CaveSpider extends Spider {
 
@@ -24,6 +25,13 @@ public class CaveSpider extends Spider {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.caveSpiderMaxHealth);
+    }
+    // Purpur end
+
     public static AttributeSupplier.Builder createCaveSpider() {
         return Spider.createAttributes().add(Attributes.MAX_HEALTH, 12.0D);
     }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Creeper.java b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
index 338161d2eb15d9264027961b71678b8d2f020fd8..ac97c4c2f52e549c28fb6561977ba8997cde79ba 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Creeper.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Creeper.java
@@ -47,6 +47,7 @@ import net.minecraft.world.level.gameevent.GameEvent;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.bukkit.event.entity.ExplosionPrimeEvent;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class Creeper extends Monster implements PowerableMob {
@@ -64,6 +65,13 @@ public class Creeper extends Monster implements PowerableMob {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.creeperMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new FloatGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/monster/Drowned.java b/src/main/java/net/minecraft/world/entity/monster/Drowned.java
index 1b1305f5eaf5710b72c57ab4c3953e703a23f1e0..a67c4c7b1bcb5dadb872b579306116837b315b9d 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Drowned.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Drowned.java
@@ -51,6 +51,7 @@ import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.level.pathfinder.Path;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Drowned extends Zombie implements RangedAttackMob {
 
@@ -68,6 +69,18 @@ public class Drowned extends Zombie implements RangedAttackMob {
         this.groundNavigation = new GroundPathNavigation(this, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.drownedMaxHealth);
+    }
+
+    @Override
+    protected void randomizeReinforcementsChance() {
+        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * LeafConfig.drownedSpawnReinforcements);
+    }
+    // Purpur end
+
     @Override
     protected void addBehaviourGoals() {
         this.goalSelector.addGoal(1, new Drowned.DrownedGoToWaterGoal(this, 1.0D));
diff --git a/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java b/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
index d02286d553c600fe7e75f48e278e380d21c5b868..01514f193de7871e3817a6904329c86382b5657e 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ElderGuardian.java
@@ -14,6 +14,7 @@ import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.level.Level;
+import org.dreeam.leaf.LeafConfig;
 
 public class ElderGuardian extends Guardian {
 
@@ -33,6 +34,13 @@ public class ElderGuardian extends Guardian {
 
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.elderGuardianMaxHealth);
+    }
+    // Purpur end
+
     public static AttributeSupplier.Builder createAttributes() {
         return Guardian.createAttributes().add(Attributes.MOVEMENT_SPEED, 0.30000001192092896D).add(Attributes.ATTACK_DAMAGE, 8.0D).add(Attributes.MAX_HEALTH, 80.0D);
     }
diff --git a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
index 2c141026c1ad03b408b607f6eb18b991d7b65211..8d0c572f76a38069b505d0de931268f2ef0ca7f4 100644
--- a/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
+++ b/src/main/java/net/minecraft/world/entity/monster/EnderMan.java
@@ -69,6 +69,7 @@ import net.minecraft.world.level.storage.loot.parameters.LootContextParams;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class EnderMan extends Monster implements NeutralMob {
 
@@ -92,6 +93,13 @@ public class EnderMan extends Monster implements NeutralMob {
         this.setPathfindingMalus(BlockPathTypes.WATER, -1.0F);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.endermanMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new FloatGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/monster/Endermite.java b/src/main/java/net/minecraft/world/entity/monster/Endermite.java
index e8c3972b889fd6b348a5b0d18444d28faa813879..9e5a283f8d93885888a8d2e84c78857614ff7168 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Endermite.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Endermite.java
@@ -27,6 +27,7 @@ import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockState;
+import org.dreeam.leaf.LeafConfig;
 
 public class Endermite extends Monster {
     private static final int MAX_LIFE = 2400;
@@ -37,6 +38,13 @@ public class Endermite extends Monster {
         this.xpReward = 3;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.endermiteMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new FloatGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/monster/Evoker.java b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
index d16988e854c327e3c33b4c7c0d3546468526cfd0..affcea6dae5a3a9baf05ca9d00e617818b445a5c 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Evoker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Evoker.java
@@ -37,6 +37,7 @@ import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.shapes.VoxelShape;
+import org.dreeam.leaf.LeafConfig;
 
 public class Evoker extends SpellcasterIllager {
 
@@ -48,6 +49,13 @@ public class Evoker extends SpellcasterIllager {
         this.xpReward = 10;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.evokerMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         super.registerGoals();
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ghast.java b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
index bb2cb17e4e5ce142eeec18951c8948e3d6b3209c..cb8e66fed8e4594c30346b510a26812212bcb75f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ghast.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ghast.java
@@ -32,6 +32,7 @@ import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Ghast extends FlyingMob implements Enemy {
 
@@ -44,6 +45,13 @@ public class Ghast extends FlyingMob implements Enemy {
         this.moveControl = new Ghast.GhastMoveControl(this);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.ghastMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(5, new Ghast.RandomFloatAroundGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/monster/Giant.java b/src/main/java/net/minecraft/world/entity/monster/Giant.java
index 41004c28edb748e12c4f868aa07b4672891197c1..46947793599b389362cbd83520aea15efc2f7eaa 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Giant.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Giant.java
@@ -8,12 +8,22 @@ import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
 import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelReader;
+import org.dreeam.leaf.LeafConfig;
 
 public class Giant extends Monster {
     public Giant(EntityType<? extends Giant> type, Level world) {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    protected void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.giantMaxHealth);
+        this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue(LeafConfig.giantMovementSpeed);
+        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue(LeafConfig.giantAttackDamage);
+    }
+    // Purpur end
+
     @Override
     protected float getStandingEyeHeight(Pose pose, EntityDimensions dimensions) {
         return 10.440001F;
diff --git a/src/main/java/net/minecraft/world/entity/monster/Guardian.java b/src/main/java/net/minecraft/world/entity/monster/Guardian.java
index 2f43700c01a0f0a4749f56d3f6294cf648b10f51..d2ab4266c522a03c0dbc863362e2a21e7bf7e1c5 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Guardian.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Guardian.java
@@ -43,6 +43,7 @@ import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Guardian extends Monster {
     protected static final int ATTACK_TIME = 80;
@@ -69,6 +70,13 @@ public class Guardian extends Monster {
         this.clientSideTailAnimationO = this.clientSideTailAnimation;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.guardianMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         MoveTowardsRestrictionGoal moveTowardsRestrictionGoal = new MoveTowardsRestrictionGoal(this, 1.0D);
diff --git a/src/main/java/net/minecraft/world/entity/monster/Husk.java b/src/main/java/net/minecraft/world/entity/monster/Husk.java
index 4996347c6dde85a2dc9aa37fdf495160093fac64..16a3a7b44dc15aa2d31bc9c463ae3f339401f6ee 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Husk.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Husk.java
@@ -15,6 +15,7 @@ import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
+import org.dreeam.leaf.LeafConfig;
 
 public class Husk extends Zombie {
 
@@ -22,6 +23,18 @@ public class Husk extends Zombie {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.huskMaxHealth);
+    }
+
+    @Override
+    protected void randomizeReinforcementsChance() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * LeafConfig.huskSpawnReinforcements);
+    }
+    // Purpur end
+
     public static boolean checkHuskSpawnRules(EntityType<Husk> type, ServerLevelAccessor world, MobSpawnType spawnReason, BlockPos pos, RandomSource random) {
         return checkMonsterSpawnRules(type, world, spawnReason, pos, random) && (spawnReason == MobSpawnType.SPAWNER || world.canSeeSky(pos));
     }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Illusioner.java b/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
index 86f7fdd42461db151221d2c0d5cff6953392fa80..26c3ceaceea799d2b4cbf9f5f26b0fac611611c6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Illusioner.java
@@ -38,6 +38,7 @@ import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Illusioner extends SpellcasterIllager implements RangedAttackMob {
 
@@ -59,6 +60,15 @@ public class Illusioner extends SpellcasterIllager implements RangedAttackMob {
 
     }
 
+    // Purpur start
+    @Override
+    protected void initAttributes() {
+        this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue(LeafConfig.illusionerMovementSpeed);
+        this.getAttribute(Attributes.FOLLOW_RANGE).setBaseValue(LeafConfig.illusionerFollowRange);
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.illusionerMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         super.registerGoals();
diff --git a/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java b/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java
index ea4fa9eba301e462c159cdb970079f6d87d25f4d..bb4401526f7054cd2a7c14ad2619874c8b45c069 100644
--- a/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java
+++ b/src/main/java/net/minecraft/world/entity/monster/MagmaCube.java
@@ -19,12 +19,35 @@ import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class MagmaCube extends Slime {
     public MagmaCube(EntityType<? extends MagmaCube> type, Level world) {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    protected String getMaxHealthEquation() {
+        return LeafConfig.magmaCubeMaxHealth;
+    }
+
+    @Override
+    protected String getAttackDamageEquation() {
+        return LeafConfig.magmaCubeAttackDamage;
+    }
+
+    @Override
+    protected java.util.Map<Integer, Double> getMaxHealthCache() {
+        return LeafConfig.magmaCubeMaxHealthCache;
+    }
+
+    @Override
+    protected java.util.Map<Integer, Double> getAttackDamageCache() {
+        return LeafConfig.magmaCubeAttackDamageCache;
+    }
+    // Purpur end
+
     public static AttributeSupplier.Builder createAttributes() {
         return Monster.createMonsterAttributes().add(Attributes.MOVEMENT_SPEED, (double)0.2F);
     }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Phantom.java b/src/main/java/net/minecraft/world/entity/monster/Phantom.java
index aa8734856ec7b90036afad13bfda46c02e548812..3d974475638cadbb51b1aaf84acdede8a7fa6ba5 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Phantom.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Phantom.java
@@ -40,6 +40,7 @@ import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Phantom extends FlyingMob implements Enemy {
 
@@ -60,6 +61,23 @@ public class Phantom extends FlyingMob implements Enemy {
         this.lookControl = new Phantom.PhantomLookControl(this);
     }
 
+    // Purpur start
+    private double getFromCache(java.util.function.Supplier<String> equation, java.util.function.Supplier<java.util.Map<Integer, Double>> cache, java.util.function.Supplier<Double> defaultValue) {
+        int size = getPhantomSize();
+        Double value = cache.get().get(size);
+        if (value == null) {
+            try {
+                scriptEngine.eval("size = " + size);
+                value = (double) scriptEngine.eval(equation.get());
+            } catch (Exception e) {
+                value = defaultValue.get();
+            }
+            cache.get().put(size, value);
+        }
+        return value;
+    }
+    // Purpur end
+
     @Override
     public boolean isFlapping() {
         return (this.getUniqueFlapTickOffset() + this.tickCount) % Phantom.TICKS_PER_FLAP == 0;
@@ -90,7 +108,10 @@ public class Phantom extends FlyingMob implements Enemy {
 
     private void updatePhantomSizeInfo() {
         this.refreshDimensions();
-        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue((double) (6 + this.getPhantomSize()));
+        // Purpur start
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(getFromCache(() -> LeafConfig.phantomMaxHealth, () -> LeafConfig.phantomMaxHealthCache, () -> 20.0D));
+        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue(getFromCache(() -> LeafConfig.phantomAttackDamage, () -> LeafConfig.phantomAttackDamageCache, () -> (double) 6 + this.getPhantomSize()));
+        // Purpur end
     }
 
     public int getPhantomSize() {
diff --git a/src/main/java/net/minecraft/world/entity/monster/Pillager.java b/src/main/java/net/minecraft/world/entity/monster/Pillager.java
index cec545c3baa6599d47b9cf1a4b97de8771062a22..86148e91832f04f2c134cc59c93c83eb2740234f 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Pillager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Pillager.java
@@ -50,6 +50,7 @@ import net.minecraft.world.item.enchantment.Enchantments;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.ServerLevelAccessor;
+import org.dreeam.leaf.LeafConfig;
 
 public class Pillager extends AbstractIllager implements CrossbowAttackMob, InventoryCarrier {
     private static final EntityDataAccessor<Boolean> IS_CHARGING_CROSSBOW = SynchedEntityData.defineId(Pillager.class, EntityDataSerializers.BOOLEAN);
@@ -62,6 +63,13 @@ public class Pillager extends AbstractIllager implements CrossbowAttackMob, Inve
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.pillagerMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         super.registerGoals();
diff --git a/src/main/java/net/minecraft/world/entity/monster/Ravager.java b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
index 6a0b4f86e5157494a917cf5efecb730081bae628..f36c0bd75b19fcab2ea53a731112fd0addd25ac7 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Ravager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Ravager.java
@@ -45,6 +45,7 @@ import net.minecraft.world.level.pathfinder.PathFinder;
 import net.minecraft.world.level.pathfinder.WalkNodeEvaluator;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Ravager extends Raider {
 
@@ -69,6 +70,13 @@ public class Ravager extends Raider {
         this.xpReward = 20;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.ravagerMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         super.registerGoals();
diff --git a/src/main/java/net/minecraft/world/entity/monster/Shulker.java b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
index 9dedb3599d5388c1bcc34558e8e5cb4a8668646f..5b04a1bd004f3d0180b448de9fe56ac464862d85 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Shulker.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Shulker.java
@@ -57,6 +57,7 @@ import net.minecraft.world.level.entity.EntityTypeTest;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 import org.joml.Vector3f;
 import org.bukkit.Location;
 import org.bukkit.event.entity.EntityTeleportEvent;
@@ -94,6 +95,13 @@ public class Shulker extends AbstractGolem implements VariantHolder<Optional<Dye
         this.lookControl = new Shulker.ShulkerLookControl(this);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.shulkerMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new LookAtPlayerGoal(this, Player.class, 8.0F, 0.02F, true));
diff --git a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
index 37d3b670a93c26b87ffc5c93ad7828f45b4b0217..be413953ab3de74e5f8dbfb5f77a0ef90828a5a9 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Silverfish.java
@@ -32,6 +32,7 @@ import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.InfestedBlock;
 import net.minecraft.world.level.block.state.BlockState;
+import org.dreeam.leaf.LeafConfig;
 
 public class Silverfish extends Monster {
 
@@ -42,6 +43,13 @@ public class Silverfish extends Monster {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.silverfishMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.friendsGoal = new Silverfish.SilverfishWakeUpFriendsGoal(this);
diff --git a/src/main/java/net/minecraft/world/entity/monster/Skeleton.java b/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
index badde621357a567965f0ef203e402e21bed09059..01e17120f88ab4552cc40d9b5efe7e250b15d0bb 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Skeleton.java
@@ -13,6 +13,7 @@ import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.ItemLike;
 import net.minecraft.world.level.Level;
+import org.dreeam.leaf.LeafConfig;
 
 public class Skeleton extends AbstractSkeleton {
 
@@ -26,6 +27,13 @@ public class Skeleton extends AbstractSkeleton {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.skeletonMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void defineSynchedData() {
         super.defineSynchedData();
diff --git a/src/main/java/net/minecraft/world/entity/monster/Slime.java b/src/main/java/net/minecraft/world/entity/monster/Slime.java
index 87c2e50c6f817d1a77e0cfd64366765b265f9ba0..3590a7178805249c00fa8c8f25a05aa84d8ee7bc 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Slime.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Slime.java
@@ -53,6 +53,7 @@ import java.util.List;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.event.entity.EntityTransformEvent;
 import org.bukkit.event.entity.SlimeSplitEvent;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class Slime extends Mob implements Enemy {
@@ -71,6 +72,39 @@ public class Slime extends Mob implements Enemy {
         this.moveControl = new Slime.SlimeMoveControl(this);
     }
 
+    // Purpur start
+    protected String getMaxHealthEquation() {
+        return LeafConfig.slimeMaxHealth;
+    }
+
+    protected String getAttackDamageEquation() {
+        return LeafConfig.slimeAttackDamage;
+    }
+
+    protected java.util.Map<Integer, Double> getMaxHealthCache() {
+        return LeafConfig.slimeMaxHealthCache;
+    }
+
+    protected java.util.Map<Integer, Double> getAttackDamageCache() {
+        return LeafConfig.slimeAttackDamageCache;
+    }
+
+    protected double getFromCache(java.util.function.Supplier<String> equation, java.util.function.Supplier<java.util.Map<Integer, Double>> cache, java.util.function.Supplier<Double> defaultValue) {
+        int size = getSize();
+        Double value = cache.get().get(size);
+        if (value == null) {
+            try {
+                scriptEngine.eval("size = " + size);
+                value = (double) scriptEngine.eval(equation.get());
+            } catch (Exception e) {
+                value = defaultValue.get();
+            }
+            cache.get().put(size, value);
+        }
+        return value;
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new Slime.SlimeFloatGoal(this));
@@ -96,9 +130,9 @@ public class Slime extends Mob implements Enemy {
         this.entityData.set(Slime.ID_SIZE, j);
         this.reapplyPosition();
         this.refreshDimensions();
-        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue((double) (j * j));
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(getFromCache(this::getMaxHealthEquation, this::getMaxHealthCache, () -> (double) size * size)); // Purpur
         this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue((double) (0.2F + 0.1F * (float) j));
-        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue((double) j);
+        this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue(getFromCache(this::getAttackDamageEquation, this::getAttackDamageCache, () -> (double) j)); // Purpur
         if (heal) {
             this.setHealth(this.getMaxHealth());
         }
diff --git a/src/main/java/net/minecraft/world/entity/monster/Spider.java b/src/main/java/net/minecraft/world/entity/monster/Spider.java
index d786b8b8c9d478504f74e65c3bc7ed3e9884d003..ae5202b49de595cad5ad2bae7e2cb3dee934a3e1 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Spider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Spider.java
@@ -41,6 +41,7 @@ import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Spider extends Monster {
 
@@ -51,6 +52,13 @@ public class Spider extends Monster {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.spiderMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(1, new FloatGoal(this));
diff --git a/src/main/java/net/minecraft/world/entity/monster/Stray.java b/src/main/java/net/minecraft/world/entity/monster/Stray.java
index 118b636a44e4b062e812e433f603b039276337da..22a6568573ef26ed6907958497ad85fb8cdd0413 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Stray.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Stray.java
@@ -15,12 +15,20 @@ import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.Blocks;
+import org.dreeam.leaf.LeafConfig;
 
 public class Stray extends AbstractSkeleton {
     public Stray(EntityType<? extends Stray> type, Level world) {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.strayMaxHealth);
+    }
+    // Purpur end
+
     public static boolean checkStraySpawnRules(EntityType<Stray> type, ServerLevelAccessor world, MobSpawnType spawnReason, BlockPos pos, RandomSource random) {
         BlockPos blockPos = pos;
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/Strider.java b/src/main/java/net/minecraft/world/entity/monster/Strider.java
index 6a511394bb01e025d5e3cf3963618920eee74445..ba30063fa9732ab056e8737ce9bbd583a68411d9 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Strider.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Strider.java
@@ -69,6 +69,7 @@ import net.minecraft.world.level.pathfinder.WalkNodeEvaluator;
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.CollisionContext;
+import org.dreeam.leaf.LeafConfig;
 
 public class Strider extends Animal implements ItemSteerable, Saddleable {
 
@@ -96,6 +97,13 @@ public class Strider extends Animal implements ItemSteerable, Saddleable {
         this.setPathfindingMalus(BlockPathTypes.DAMAGE_FIRE, 0.0F);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.striderMaxHealth);
+    }
+    // Purpur end
+
     public static boolean checkStriderSpawnRules(EntityType<Strider> type, LevelAccessor world, MobSpawnType spawnReason, BlockPos pos, RandomSource random) {
         BlockPos.MutableBlockPos blockposition_mutableblockposition = pos.mutable();
 
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vex.java b/src/main/java/net/minecraft/world/entity/monster/Vex.java
index 8804771d73c2521d6dff284de3464fa5788e5ffc..d318b60d4798b16da3cabcf850a44d97f8d8c613 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vex.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vex.java
@@ -41,6 +41,7 @@ import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Vex extends Monster {
 
@@ -62,6 +63,13 @@ public class Vex extends Monster {
         this.xpReward = 3;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.vexMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected float getStandingEyeHeight(Pose pose, EntityDimensions dimensions) {
         return dimensions.height - 0.28125F;
diff --git a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
index a9e75a16a7dc0ff5d4f0faa92ebc444559a39325..cff5201459c22f4fea84e4f8d553f3923ed98c1a 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Vindicator.java
@@ -46,6 +46,7 @@ import net.minecraft.world.item.enchantment.EnchantmentHelper;
 import net.minecraft.world.item.enchantment.Enchantments;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
+import org.dreeam.leaf.LeafConfig;
 
 public class Vindicator extends AbstractIllager {
     private static final String TAG_JOHNNY = "Johnny";
@@ -58,6 +59,13 @@ public class Vindicator extends AbstractIllager {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.vindicatorMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         super.registerGoals();
diff --git a/src/main/java/net/minecraft/world/entity/monster/Witch.java b/src/main/java/net/minecraft/world/entity/monster/Witch.java
index b7bc64818387288955d0723cd071d4203bd2f121..2e57af02e6d507be6c55b2f5f1c76a78e293503d 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Witch.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Witch.java
@@ -42,6 +42,7 @@ import net.minecraft.world.item.alchemy.PotionUtils;
 import net.minecraft.world.item.alchemy.Potions;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.Vec3;
+import org.dreeam.leaf.LeafConfig;
 
 public class Witch extends Raider implements RangedAttackMob {
 
@@ -56,6 +57,13 @@ public class Witch extends Raider implements RangedAttackMob {
         super(type, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.witchMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         super.registerGoals();
diff --git a/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java b/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
index 6449213d717271bcc516e393a78dfe1e5c762d68..6d41586b6bccfa97d9f70c08296267fa78f831e1 100644
--- a/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
+++ b/src/main/java/net/minecraft/world/entity/monster/WitherSkeleton.java
@@ -27,6 +27,7 @@ import net.minecraft.world.level.ItemLike;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
+import org.dreeam.leaf.LeafConfig;
 
 public class WitherSkeleton extends AbstractSkeleton {
 
@@ -35,6 +36,13 @@ public class WitherSkeleton extends AbstractSkeleton {
         this.setPathfindingMalus(BlockPathTypes.LAVA, 8.0F);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.witherSkeletonMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.targetSelector.addGoal(3, new NearestAttackableTargetGoal<>(this, AbstractPiglin.class, true));
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
index 818d1f09b63ad0df9e3fae059a05801571a5606d..15af1338fa73144a85132a30c127950849e4ed3a 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zoglin.java
@@ -45,6 +45,7 @@ import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.schedule.Activity;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockState;
+import org.dreeam.leaf.LeafConfig;
 
 public class Zoglin extends Monster implements Enemy, HoglinBase {
     private static final EntityDataAccessor<Boolean> DATA_BABY_ID = SynchedEntityData.defineId(Zoglin.class, EntityDataSerializers.BOOLEAN);
@@ -67,6 +68,13 @@ public class Zoglin extends Monster implements Enemy, HoglinBase {
         this.xpReward = 5;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.zoglinMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected Brain.Provider<Zoglin> brainProvider() {
         return Brain.provider(MEMORY_TYPES, SENSOR_TYPES);
diff --git a/src/main/java/net/minecraft/world/entity/monster/Zombie.java b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
index 9976205537cfe228735687f1e9c52c74ac025690..8d2c16262056b8ebdea0786e66f9855be44bb5fb 100644
--- a/src/main/java/net/minecraft/world/entity/monster/Zombie.java
+++ b/src/main/java/net/minecraft/world/entity/monster/Zombie.java
@@ -71,6 +71,7 @@ import org.bukkit.event.entity.CreatureSpawnEvent;
 import org.bukkit.event.entity.EntityCombustByEntityEvent;
 import org.bukkit.event.entity.EntityTargetEvent;
 import org.bukkit.event.entity.EntityTransformEvent;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class Zombie extends Monster {
@@ -106,6 +107,13 @@ public class Zombie extends Monster {
         this(EntityType.ZOMBIE, world);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.zombieMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         if (level.paperConfig().entities.behavior.zombiesTargetTurtleEggs) this.goalSelector.addGoal(4, new Zombie.ZombieAttackTurtleEggGoal(this, 1.0D, 3)); // Paper
@@ -595,7 +603,7 @@ public class Zombie extends Monster {
     }
 
     protected void randomizeReinforcementsChance() {
-        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * 0.10000000149011612D);
+        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * LeafConfig.zombieSpawnReinforcements); // Purpur
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java b/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
index 201b0e1b25d0773bbcf9c1ed69fd888a61c6a16f..50900f99f3d0b815572af6f30921092809aac7c5 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ZombieVillager.java
@@ -41,6 +41,7 @@ import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.BedBlock;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
+import org.dreeam.leaf.LeafConfig;
 import org.slf4j.Logger;
 
 // CraftBukkit start
@@ -79,6 +80,18 @@ public class ZombieVillager extends Zombie implements VillagerDataHolder {
         });
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.zombieVillagerMaxHealth);
+    }
+
+    @Override
+    protected void randomizeReinforcementsChance() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * LeafConfig.zombieVillagerSpawnReinforcements);
+    }
+    // Purpur end
+
     @Override
     protected void defineSynchedData() {
         super.defineSynchedData();
diff --git a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
index b75945807b425609394c343da56c316a769f0a29..a4d9bad02c0e05a48d7680340564d5f70481f8df 100644
--- a/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/ZombifiedPiglin.java
@@ -40,6 +40,7 @@ import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 import net.minecraft.world.phys.AABB;
+import org.dreeam.leaf.LeafConfig;
 
 public class ZombifiedPiglin extends Zombie implements NeutralMob {
 
@@ -63,6 +64,13 @@ public class ZombifiedPiglin extends Zombie implements NeutralMob {
         this.setPathfindingMalus(BlockPathTypes.LAVA, 8.0F);
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.zombifiedPiglinMaxHealth);
+    }
+    // Purpur end
+
     @Override
     public void setPersistentAngerTarget(@Nullable UUID angryAt) {
         this.persistentAngerTarget = angryAt;
@@ -250,7 +258,7 @@ public class ZombifiedPiglin extends Zombie implements NeutralMob {
 
     @Override
     protected void randomizeReinforcementsChance() {
-        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(0.0D);
+        this.getAttribute(Attributes.SPAWN_REINFORCEMENTS_CHANCE).setBaseValue(this.random.nextDouble() * LeafConfig.zombifiedPiglinSpawnReinforcements); // Purpur
     }
 
     @Nullable
diff --git a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
index 739f4f86af7951ea42a3b248b93989de8b8f4f54..fd23729fa9d928d10258d64398935474b0ded548 100644
--- a/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -45,6 +45,7 @@ import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
+import org.dreeam.leaf.LeafConfig;
 
 public class Hoglin extends Animal implements Enemy, HoglinBase {
     private static final EntityDataAccessor<Boolean> DATA_IMMUNE_TO_ZOMBIFICATION = SynchedEntityData.defineId(Hoglin.class, EntityDataSerializers.BOOLEAN);
@@ -67,6 +68,13 @@ public class Hoglin extends Animal implements Enemy, HoglinBase {
         this.xpReward = 5;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.hoglinMaxHealth);
+    }
+    // Purpur end
+
     @Override
     public boolean canBeLeashed(Player player) {
         return !this.isLeashed();
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
index a2246ab400545284cb65c292012eaf8bb3376ad7..3f295cb6a69874c1e4c07f973b1867763946f5e6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/Piglin.java
@@ -97,6 +97,13 @@ public class Piglin extends AbstractPiglin implements CrossbowAttackMob, Invento
         this.xpReward = 5;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.piglinMaxHealth);
+    }
+    // Purpur end
+
     @Override
     public void addAdditionalSaveData(CompoundTag nbt) {
         super.addAdditionalSaveData(nbt);
diff --git a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java
index edee6a47e67a9e02ac269dcc16b1932cedb4d8aa..2b89543ad4d05dd6f0c8692f2471ff240d4bd1a6 100644
--- a/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java
+++ b/src/main/java/net/minecraft/world/entity/monster/piglin/PiglinBrute.java
@@ -28,6 +28,7 @@ import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.state.BlockState;
+import org.dreeam.leaf.LeafConfig;
 
 public class PiglinBrute extends AbstractPiglin {
     private static final int MAX_HEALTH = 50;
@@ -41,6 +42,13 @@ public class PiglinBrute extends AbstractPiglin {
         this.xpReward = 20;
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.piglinBruteMaxHealth);
+    }
+    // Purpur end
+
     public static AttributeSupplier.Builder createAttributes() {
         return Monster.createMonsterAttributes().add(Attributes.MAX_HEALTH, 50.0D).add(Attributes.MOVEMENT_SPEED, (double)0.35F).add(Attributes.ATTACK_DAMAGE, 7.0D);
     }
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index d9197a989435dacb954692c4b6b9175062f268d8..f12e9ce1e8aee82cc2755b01f22f70942cc69028 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -88,6 +88,7 @@ import net.minecraft.world.item.trading.MerchantOffers;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.phys.AABB;
+import org.dreeam.leaf.LeafConfig;
 import org.jetbrains.annotations.NotNull;
 import org.slf4j.Logger;
 
@@ -157,6 +158,12 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         this.setVillagerData(this.getVillagerData().setType(type).setProfession(VillagerProfession.NONE));
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(LeafConfig.villagerMaxHealth);
+    }
+
     private boolean checkLobotomized() {
         int interval = org.dreeam.leaf.LeafConfig.villagerLobotomizeCheckInterval;
         if (this.notLobotomizedCount > 3) {
@@ -197,6 +204,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         // only if both blocks have no collision
         return !bottom.hasCollision && !top.hasCollision;
     }
+    // Purpur end
 
     @Override
     public Brain<Villager> getBrain() {
diff --git a/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java b/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
index e92e6fb4cf97f4d5406b5b5d5786bfa5fb55f536..736db525e6ee81484ac3fb8dc03055449a34aa97 100644
--- a/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
+++ b/src/main/java/net/minecraft/world/entity/npc/WanderingTrader.java
@@ -48,6 +48,7 @@ import org.bukkit.Bukkit;
 import org.bukkit.craftbukkit.inventory.CraftMerchantRecipe;
 import org.bukkit.entity.AbstractVillager;
 import org.bukkit.event.entity.VillagerAcquireTradeEvent;
+import org.dreeam.leaf.LeafConfig;
 // CraftBukkit end
 
 public class WanderingTrader extends net.minecraft.world.entity.npc.AbstractVillager {
@@ -66,6 +67,13 @@ public class WanderingTrader extends net.minecraft.world.entity.npc.AbstractVill
         this.setDespawnDelay(48000); // CraftBukkit - set default from MobSpawnerTrader
     }
 
+    // Purpur start
+    @Override
+    public void initAttributes() {
+        this.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.MAX_HEALTH).setBaseValue(LeafConfig.wanderingTraderMaxHealth);
+    }
+    // Purpur end
+
     @Override
     protected void registerGoals() {
         this.goalSelector.addGoal(0, new FloatGoal(this));
diff --git a/src/main/java/org/dreeam/leaf/LeafConfig.java b/src/main/java/org/dreeam/leaf/LeafConfig.java
index e8ca567656f23548ddd2485e2f973ec128d93763..81b5b8ae36726ac1bd14da7f38b8904ac7fedc84 100644
--- a/src/main/java/org/dreeam/leaf/LeafConfig.java
+++ b/src/main/java/org/dreeam/leaf/LeafConfig.java
@@ -15,6 +15,7 @@ import java.io.File;
 import java.io.IOException;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
+import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
@@ -283,4 +284,280 @@ public class LeafConfig {
     private static void networkSettings() {
         kickForOutOfOrderChat = getBoolean("network.kick-for-out-of-order-chat", kickForOutOfOrderChat);
     }
+
+    public static double axolotlMaxHealth = 14.0D;
+    public static double batMaxHealth = 6.0D;
+    public static double batFollowRange = 16.0D;
+    public static double batKnockbackResistance = 0.0D;
+    public static double batMovementSpeed = 0.6D;
+    public static double batFlyingSpeed = 0.6D;
+    public static double batArmor = 0.0D;
+    public static double batArmorToughness = 0.0D;
+    public static double batAttackKnockback = 0.0D;
+    public static double beeMaxHealth = 10.0D;
+    public static double blazeMaxHealth = 20.0D;
+    public static int camelBreedingTicks = 6000;
+    public static double camelMaxHealthMin = 32.0D;
+    public static double camelMaxHealthMax = 32.0D;
+    public static double camelJumpStrengthMin = 0.42D;
+    public static double camelJumpStrengthMax = 0.42D;
+    public static double camelMovementSpeedMin = 0.09D;
+    public static double camelMovementSpeedMax = 0.09D;
+    public static double catMaxHealth = 10.0D;
+    public static double caveSpiderMaxHealth = 12.0D;
+    public static double chickenMaxHealth = 4.0D;
+    public static double codMaxHealth = 3.0D;
+    public static double cowMaxHealth = 10.0D;
+    public static double creeperMaxHealth = 20.0D;
+    public static double dolphinMaxHealth = 10.0D;
+    public static double donkeyMaxHealthMin = 15.0D;
+    public static double donkeyMaxHealthMax = 30.0D;
+    public static double donkeyJumpStrengthMin = 0.5D;
+    public static double donkeyJumpStrengthMax = 0.5D;
+    public static double donkeyMovementSpeedMin = 0.175D;
+    public static double donkeyMovementSpeedMax = 0.175D;
+    public static double drownedMaxHealth = 20.0D;
+    public static double drownedSpawnReinforcements = 0.1D;
+    public static double elderGuardianMaxHealth = 80.0D;
+    public static double enderDragonMaxHealth = 200.0D;
+    public static double endermanMaxHealth = 40.0D;
+    public static double endermiteMaxHealth = 8.0D;
+    public static double evokerMaxHealth = 24.0D;
+    public static double foxMaxHealth = 10.0D;
+    public static double ghastMaxHealth = 10.0D;
+    public static double giantMovementSpeed = 0.5D;
+    public static double giantAttackDamage = 50.0D;
+    public static double giantMaxHealth = 100.0D;
+    public static double glowSquidMaxHealth = 10.0D;
+    public static double goatMaxHealth = 10.0D;
+    public static double guardianMaxHealth = 30.0D;
+    public static double hoglinMaxHealth = 40.0D;
+    public static double horseMaxHealthMin = 15.0D;
+    public static double horseMaxHealthMax = 30.0D;
+    public static double horseJumpStrengthMin = 0.4D;
+    public static double horseJumpStrengthMax = 1.0D;
+    public static double horseMovementSpeedMin = 0.1125D;
+    public static double horseMovementSpeedMax = 0.3375D;
+    public static double huskMaxHealth = 20.0D;
+    public static double huskSpawnReinforcements = 0.1D;
+    public static double illusionerMovementSpeed = 0.5D;
+    public static double illusionerFollowRange = 18.0D;
+    public static double illusionerMaxHealth = 32.0D;
+    public static double ironGolemMaxHealth = 100.0D;
+    public static double llamaMaxHealthMin = 15.0D;
+    public static double llamaMaxHealthMax = 30.0D;
+    public static double llamaJumpStrengthMin = 0.5D;
+    public static double llamaJumpStrengthMax = 0.5D;
+    public static double llamaMovementSpeedMin = 0.175D;
+    public static double llamaMovementSpeedMax = 0.175D;
+    public static String magmaCubeMaxHealth = "size * size";
+    public static String magmaCubeAttackDamage = "size";
+    public static Map<Integer, Double> magmaCubeMaxHealthCache = new HashMap<>();
+    public static Map<Integer, Double> magmaCubeAttackDamageCache = new HashMap<>();
+    public static double mooshroomMaxHealth = 10.0D;
+    public static double muleMaxHealthMin = 15.0D;
+    public static double muleMaxHealthMax = 30.0D;
+    public static double muleJumpStrengthMin = 0.5D;
+    public static double muleJumpStrengthMax = 0.5D;
+    public static double muleMovementSpeedMin = 0.175D;
+    public static double muleMovementSpeedMax = 0.175D;
+    public static double ocelotMaxHealth = 10.0D;
+    public static double pandaMaxHealth = 20.0D;
+    public static double parrotMaxHealth = 6.0D;
+    public static String phantomMaxHealth = "20.0";
+    public static String phantomAttackDamage = "6 + size";
+    public static Map<Integer, Double> phantomMaxHealthCache = new HashMap<>();
+    public static Map<Integer, Double> phantomAttackDamageCache = new HashMap<>();
+    public static double pigMaxHealth = 10.0D;
+    public static double piglinMaxHealth = 16.0D;
+    public static double piglinBruteMaxHealth = 50.0D;
+    public static double pillagerMaxHealth = 24.0D;
+    public static double polarBearMaxHealth = 30.0D;
+    public static double pufferfishMaxHealth = 3.0D;
+    public static double rabbitMaxHealth = 3.0D;
+    public static double ravagerMaxHealth = 100.0D;
+    public static double salmonMaxHealth = 3.0D;
+    public static double sheepMaxHealth = 8.0D;
+    public static double shulkerMaxHealth = 30.0D;
+    public static double silverfishMaxHealth = 8.0D;
+    public static double skeletonMaxHealth = 20.0D;
+    public static double skeletonHorseMaxHealthMin = 15.0D;
+    public static double skeletonHorseMaxHealthMax = 15.0D;
+    public static double skeletonHorseJumpStrengthMin = 0.4D;
+    public static double skeletonHorseJumpStrengthMax = 1.0D;
+    public static double skeletonHorseMovementSpeedMin = 0.2D;
+    public static double skeletonHorseMovementSpeedMax = 0.2D;
+    public static String slimeMaxHealth = "size * size";
+    public static String slimeAttackDamage = "size";
+    public static Map<Integer, Double> slimeMaxHealthCache = new HashMap<>();
+    public static Map<Integer, Double> slimeAttackDamageCache = new HashMap<>();
+    public static double snowGolemMaxHealth = 4.0D;
+    public static double squidMaxHealth = 10.0D;
+    public static double spiderMaxHealth = 16.0D;
+    public static double strayMaxHealth = 20.0D;
+    public static double striderMaxHealth = 20.0D;
+    public static double traderLlamaMaxHealthMin = 15.0D;
+    public static double traderLlamaMaxHealthMax = 30.0D;
+    public static double traderLlamaJumpStrengthMin = 0.5D;
+    public static double traderLlamaJumpStrengthMax = 0.5D;
+    public static double traderLlamaMovementSpeedMin = 0.175D;
+    public static double traderLlamaMovementSpeedMax = 0.175D;
+    public static double tropicalFishMaxHealth = 3.0D;
+    public static double turtleMaxHealth = 30.0D;
+    public static double vexMaxHealth = 14.0D;
+    public static double villagerMaxHealth = 20.0D;
+    public static double vindicatorMaxHealth = 24.0D;
+    public static double wanderingTraderMaxHealth = 20.0D;
+    public static double witchMaxHealth = 26.0D;
+    public static double witherMaxHealth = 300.0D;
+    public static double witherSkeletonMaxHealth = 20.0D;
+    public static double wolfMaxHealth = 8.0D;
+    public static double zoglinMaxHealth = 40.0D;
+    public static double zombieMaxHealth = 20.0D;
+    public static double zombieSpawnReinforcements = 0.1D;
+    public static double zombieHorseMaxHealthMin = 15.0D;
+    public static double zombieHorseMaxHealthMax = 15.0D;
+    public static double zombieHorseJumpStrengthMin = 0.4D;
+    public static double zombieHorseJumpStrengthMax = 1.0D;
+    public static double zombieHorseMovementSpeedMin = 0.2D;
+    public static double zombieHorseMovementSpeedMax = 0.2D;
+    public static double zombieVillagerMaxHealth = 20.0D;
+    public static double zombieVillagerSpawnReinforcements = 0.1D;
+    public static double zombifiedPiglinMaxHealth = 20.0D;
+    public static double zombifiedPiglinSpawnReinforcements = 0.0D;
+    private static void mobSettings() {
+        axolotlMaxHealth = getDouble("mobs.axolotl.attributes.max_health", axolotlMaxHealth);
+        batMaxHealth = getDouble("mobs.bat.attributes.max_health", batMaxHealth);
+        beeMaxHealth = getDouble("mobs.bee.attributes.max_health", beeMaxHealth);
+        blazeMaxHealth = getDouble("mobs.blaze.attributes.max_health", blazeMaxHealth);
+        camelMaxHealthMin = getDouble("mobs.camel.attributes.max_health.min", camelMaxHealthMin);
+        camelMaxHealthMax = getDouble("mobs.camel.attributes.max_health.max", camelMaxHealthMax);
+        camelJumpStrengthMin = getDouble("mobs.camel.attributes.jump_strength.min", camelJumpStrengthMin);
+        camelJumpStrengthMax = getDouble("mobs.camel.attributes.jump_strength.max", camelJumpStrengthMax);
+        camelMovementSpeedMin = getDouble("mobs.camel.attributes.movement_speed.min", camelMovementSpeedMin);
+        camelMovementSpeedMax = getDouble("mobs.camel.attributes.movement_speed.max", camelMovementSpeedMax);
+        camelBreedingTicks = getInt("mobs.camel.breeding-delay-ticks", camelBreedingTicks);
+        catMaxHealth = getDouble("mobs.cat.attributes.max_health", catMaxHealth);
+        caveSpiderMaxHealth = getDouble("mobs.cave_spider.attributes.max_health", caveSpiderMaxHealth);
+        chickenMaxHealth = getDouble("mobs.chicken.attributes.max_health", chickenMaxHealth);
+        codMaxHealth = getDouble("mobs.cod.attributes.max_health", codMaxHealth);
+        cowMaxHealth = getDouble("mobs.cow.attributes.max_health", cowMaxHealth);
+        creeperMaxHealth = getDouble("mobs.creeper.attributes.max_health", creeperMaxHealth);
+        dolphinMaxHealth = getDouble("mobs.dolphin.attributes.max_health", dolphinMaxHealth);
+        donkeyMaxHealthMin = getDouble("mobs.donkey.attributes.max_health.min", donkeyMaxHealthMin);
+        donkeyMaxHealthMax = getDouble("mobs.donkey.attributes.max_health.max", donkeyMaxHealthMax);
+        donkeyJumpStrengthMin = getDouble("mobs.donkey.attributes.jump_strength.min", donkeyJumpStrengthMin);
+        donkeyJumpStrengthMax = getDouble("mobs.donkey.attributes.jump_strength.max", donkeyJumpStrengthMax);
+        donkeyMovementSpeedMin = getDouble("mobs.donkey.attributes.movement_speed.min", donkeyMovementSpeedMin);
+        donkeyMovementSpeedMax = getDouble("mobs.donkey.attributes.movement_speed.max", donkeyMovementSpeedMax);
+        drownedMaxHealth = getDouble("mobs.drowned.attributes.max_health", drownedMaxHealth);
+        drownedSpawnReinforcements = getDouble("mobs.drowned.attributes.spawn_reinforcements", drownedSpawnReinforcements);
+        elderGuardianMaxHealth = getDouble("mobs.elder_guardian.attributes.max_health", elderGuardianMaxHealth);
+        enderDragonMaxHealth = getDouble("mobs.ender_dragon.attributes.max_health", enderDragonMaxHealth);
+        endermanMaxHealth = getDouble("mobs.enderman.attributes.max_health", endermanMaxHealth);
+        endermiteMaxHealth = getDouble("mobs.endermite.attributes.max_health", endermiteMaxHealth);
+        evokerMaxHealth = getDouble("mobs.evoker.attributes.max_health", evokerMaxHealth);
+        foxMaxHealth = getDouble("mobs.fox.attributes.max_health", foxMaxHealth);
+        ghastMaxHealth = getDouble("mobs.ghast.attributes.max_health", ghastMaxHealth);
+        giantMovementSpeed = getDouble("mobs.giant.movement-speed", giantMovementSpeed);
+        giantAttackDamage = getDouble("mobs.giant.attack-damage", giantAttackDamage);
+        giantMaxHealth = getDouble("mobs.giant.attributes.max_health", giantMaxHealth);
+        glowSquidMaxHealth = getDouble("mobs.glow_squid.attributes.max_health", glowSquidMaxHealth);
+        goatMaxHealth = getDouble("mobs.goat.attributes.max_health", goatMaxHealth);
+        guardianMaxHealth = getDouble("mobs.guardian.attributes.max_health", guardianMaxHealth);
+        hoglinMaxHealth = getDouble("mobs.hoglin.attributes.max_health", hoglinMaxHealth);
+        horseMaxHealthMin = getDouble("mobs.horse.attributes.max_health.min", horseMaxHealthMin);
+        horseMaxHealthMax = getDouble("mobs.horse.attributes.max_health.max", horseMaxHealthMax);
+        horseJumpStrengthMin = getDouble("mobs.horse.attributes.jump_strength.min", horseJumpStrengthMin);
+        horseJumpStrengthMax = getDouble("mobs.horse.attributes.jump_strength.max", horseJumpStrengthMax);
+        horseMovementSpeedMin = getDouble("mobs.horse.attributes.movement_speed.min", horseMovementSpeedMin);
+        horseMovementSpeedMax = getDouble("mobs.horse.attributes.movement_speed.max", horseMovementSpeedMax);
+        huskMaxHealth = getDouble("mobs.husk.attributes.max_health", huskMaxHealth);
+        huskSpawnReinforcements = getDouble("mobs.husk.attributes.spawn_reinforcements", huskSpawnReinforcements);
+        illusionerMovementSpeed = getDouble("mobs.illusioner.movement-speed", illusionerMovementSpeed);
+        illusionerFollowRange = getDouble("mobs.illusioner.follow-range", illusionerFollowRange);
+        illusionerMaxHealth = getDouble("mobs.illusioner.attributes.max_health", illusionerMaxHealth);
+        ironGolemMaxHealth = getDouble("mobs.iron_golem.attributes.max_health", ironGolemMaxHealth);
+        llamaMaxHealthMin = getDouble("mobs.llama.attributes.max_health.min", llamaMaxHealthMin);
+        llamaMaxHealthMax = getDouble("mobs.llama.attributes.max_health.max", llamaMaxHealthMax);
+        llamaJumpStrengthMin = getDouble("mobs.llama.attributes.jump_strength.min", llamaJumpStrengthMin);
+        llamaJumpStrengthMax = getDouble("mobs.llama.attributes.jump_strength.max", llamaJumpStrengthMax);
+        llamaMovementSpeedMin = getDouble("mobs.llama.attributes.movement_speed.min", llamaMovementSpeedMin);
+        llamaMovementSpeedMax = getDouble("mobs.llama.attributes.movement_speed.max", llamaMovementSpeedMax);
+        magmaCubeMaxHealth = getString("mobs.magma_cube.attributes.max_health", magmaCubeMaxHealth);
+        magmaCubeAttackDamage = getString("mobs.magma_cube.attributes.attack_damage", magmaCubeAttackDamage);
+        magmaCubeMaxHealthCache.clear();
+        magmaCubeAttackDamageCache.clear();
+        mooshroomMaxHealth = getDouble("mobs.mooshroom.attributes.max_health", mooshroomMaxHealth);
+        muleMaxHealthMin = getDouble("mobs.mule.attributes.max_health.min", muleMaxHealthMin);
+        muleMaxHealthMax = getDouble("mobs.mule.attributes.max_health.max", muleMaxHealthMax);
+        muleJumpStrengthMin = getDouble("mobs.mule.attributes.jump_strength.min", muleJumpStrengthMin);
+        muleJumpStrengthMax = getDouble("mobs.mule.attributes.jump_strength.max", muleJumpStrengthMax);
+        muleMovementSpeedMin = getDouble("mobs.mule.attributes.movement_speed.min", muleMovementSpeedMin);
+        muleMovementSpeedMax = getDouble("mobs.mule.attributes.movement_speed.max", muleMovementSpeedMax);
+        ocelotMaxHealth = getDouble("mobs.ocelot.attributes.max_health", ocelotMaxHealth);
+        pandaMaxHealth = getDouble("mobs.panda.attributes.max_health", pandaMaxHealth);
+        parrotMaxHealth = getDouble("mobs.parrot.attributes.max_health", parrotMaxHealth);
+        phantomMaxHealth = getString("mobs.phantom.attributes.max_health", phantomMaxHealth);
+        phantomAttackDamage = getString("mobs.phantom.attributes.attack_damage", phantomAttackDamage);
+        phantomMaxHealthCache.clear();
+        phantomAttackDamageCache.clear();
+        pigMaxHealth = getDouble("mobs.pig.attributes.max_health", pigMaxHealth);
+        piglinMaxHealth = getDouble("mobs.piglin.attributes.max_health", piglinMaxHealth);
+        piglinBruteMaxHealth = getDouble("mobs.piglin_brute.attributes.max_health", piglinBruteMaxHealth);
+        pillagerMaxHealth = getDouble("mobs.pillager.attributes.max_health", pillagerMaxHealth);
+        polarBearMaxHealth = getDouble("mobs.polar_bear.attributes.max_health", polarBearMaxHealth);
+        pufferfishMaxHealth = getDouble("mobs.pufferfish.attributes.max_health", pufferfishMaxHealth);
+        rabbitMaxHealth = getDouble("mobs.rabbit.attributes.max_health", rabbitMaxHealth);
+        ravagerMaxHealth = getDouble("mobs.ravager.attributes.max_health", ravagerMaxHealth);
+        salmonMaxHealth = getDouble("mobs.salmon.attributes.max_health", salmonMaxHealth);
+        sheepMaxHealth = getDouble("mobs.sheep.attributes.max_health", sheepMaxHealth);
+        shulkerMaxHealth = getDouble("mobs.shulker.attributes.max_health", shulkerMaxHealth);
+        silverfishMaxHealth = getDouble("mobs.silverfish.attributes.max_health", silverfishMaxHealth);
+        skeletonMaxHealth = getDouble("mobs.skeleton.attributes.max_health", skeletonMaxHealth);
+        skeletonHorseMaxHealthMin = getDouble("mobs.skeleton_horse.attributes.max_health.min", skeletonHorseMaxHealthMin);
+        skeletonHorseMaxHealthMax = getDouble("mobs.skeleton_horse.attributes.max_health.max", skeletonHorseMaxHealthMax);
+        skeletonHorseJumpStrengthMin = getDouble("mobs.skeleton_horse.attributes.jump_strength.min", skeletonHorseJumpStrengthMin);
+        skeletonHorseJumpStrengthMax = getDouble("mobs.skeleton_horse.attributes.jump_strength.max", skeletonHorseJumpStrengthMax);
+        skeletonHorseMovementSpeedMin = getDouble("mobs.skeleton_horse.attributes.movement_speed.min", skeletonHorseMovementSpeedMin);
+        skeletonHorseMovementSpeedMax = getDouble("mobs.skeleton_horse.attributes.movement_speed.max", skeletonHorseMovementSpeedMax);
+        slimeMaxHealth = getString("mobs.slime.attributes.max_health", slimeMaxHealth);
+        slimeAttackDamage = getString("mobs.slime.attributes.attack_damage", slimeAttackDamage);
+        slimeMaxHealthCache.clear();
+        slimeAttackDamageCache.clear();
+        snowGolemMaxHealth = getDouble("mobs.snow_golem.attributes.max_health", snowGolemMaxHealth);
+        squidMaxHealth = getDouble("mobs.squid.attributes.max_health", squidMaxHealth);
+        spiderMaxHealth = getDouble("mobs.spider.attributes.max_health", spiderMaxHealth);
+        strayMaxHealth = getDouble("mobs.stray.attributes.max_health", strayMaxHealth);
+        striderMaxHealth = getDouble("mobs.strider.attributes.max_health", striderMaxHealth);
+        traderLlamaMaxHealthMin = getDouble("mobs.trader_llama.attributes.max_health.min", traderLlamaMaxHealthMin);
+        traderLlamaMaxHealthMax = getDouble("mobs.trader_llama.attributes.max_health.max", traderLlamaMaxHealthMax);
+        traderLlamaJumpStrengthMin = getDouble("mobs.trader_llama.attributes.jump_strength.min", traderLlamaJumpStrengthMin);
+        traderLlamaJumpStrengthMax = getDouble("mobs.trader_llama.attributes.jump_strength.max", traderLlamaJumpStrengthMax);
+        traderLlamaMovementSpeedMin = getDouble("mobs.trader_llama.attributes.movement_speed.min", traderLlamaMovementSpeedMin);
+        traderLlamaMovementSpeedMax = getDouble("mobs.trader_llama.attributes.movement_speed.max", traderLlamaMovementSpeedMax);
+        tropicalFishMaxHealth = getDouble("mobs.tropical_fish.attributes.max_health", tropicalFishMaxHealth);
+        turtleMaxHealth = getDouble("mobs.turtle.attributes.max_health", turtleMaxHealth);
+        vexMaxHealth = getDouble("mobs.vex.attributes.max_health", vexMaxHealth);
+        villagerMaxHealth = getDouble("mobs.villager.attributes.max_health", villagerMaxHealth);
+        vindicatorMaxHealth = getDouble("mobs.vindicator.attributes.max_health", vindicatorMaxHealth);
+        wanderingTraderMaxHealth = getDouble("mobs.wandering_trader.attributes.max_health", wanderingTraderMaxHealth);
+        witchMaxHealth = getDouble("mobs.witch.attributes.max_health", witchMaxHealth);
+        witherMaxHealth = getDouble("mobs.wither.attributes.max_health", witherMaxHealth);
+        witherSkeletonMaxHealth = getDouble("mobs.wither_skeleton.attributes.max_health", witherSkeletonMaxHealth);
+        wolfMaxHealth = getDouble("mobs.wolf.attributes.max_health", wolfMaxHealth);
+        zoglinMaxHealth = getDouble("mobs.zoglin.attributes.max_health", zoglinMaxHealth);
+        zombieMaxHealth = getDouble("mobs.zombie.attributes.max_health", zombieMaxHealth);
+        zombieSpawnReinforcements = getDouble("mobs.zombie.attributes.spawn_reinforcements", zombieSpawnReinforcements);
+        zombieHorseMaxHealthMin = getDouble("mobs.zombie_horse.attributes.max_health.min", zombieHorseMaxHealthMin);
+        zombieHorseMaxHealthMax = getDouble("mobs.zombie_horse.attributes.max_health.max", zombieHorseMaxHealthMax);
+        zombieHorseJumpStrengthMin = getDouble("mobs.zombie_horse.attributes.jump_strength.min", zombieHorseJumpStrengthMin);
+        zombieHorseJumpStrengthMax = getDouble("mobs.zombie_horse.attributes.jump_strength.max", zombieHorseJumpStrengthMax);
+        zombieHorseMovementSpeedMin = getDouble("mobs.zombie_horse.attributes.movement_speed.min", zombieHorseMovementSpeedMin);
+        zombieHorseMovementSpeedMax = getDouble("mobs.zombie_horse.attributes.movement_speed.max", zombieHorseMovementSpeedMax);
+        zombieVillagerMaxHealth = getDouble("mobs.zombie_villager.attributes.max_health", zombieVillagerMaxHealth);
+        zombieVillagerSpawnReinforcements = getDouble("mobs.zombie_villager.attributes.spawn_reinforcements", zombieVillagerSpawnReinforcements);
+        zombifiedPiglinMaxHealth = getDouble("mobs.zombified_piglin.attributes.max_health", zombifiedPiglinMaxHealth);
+        zombifiedPiglinSpawnReinforcements = getDouble("mobs.zombified_piglin.attributes.spawn_reinforcements", zombifiedPiglinSpawnReinforcements);
+    }
 }
