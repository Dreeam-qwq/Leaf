From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Dreeam <61569423+Dreeam-qwq@users.noreply.github.com>
Date: Fri, 18 Nov 2022 23:26:16 -0500
Subject: [PATCH] Remove UseItemOnPacket Too Far Check

This Check is added in 1.17.x -> 1.18.x update by Mojang.
By removing this check, it enable hackers to use some modules of hack clients.
TODO: Add toggle for this patch.

diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 98ceec4404c08b08bc8d917730858eec40cfeb9e..e3b1a4fda1f29de33ac645e0a65c9110f42956c4 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -1977,36 +1977,32 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
             Vec3 vec3d2 = vec3d.subtract(vec3d1);
             double d0 = 1.0000001D;
 
-            if (Math.abs(vec3d2.x()) < 1.0000001D && Math.abs(vec3d2.y()) < 1.0000001D && Math.abs(vec3d2.z()) < 1.0000001D) {
-                Direction enumdirection = movingobjectpositionblock.getDirection();
+            Direction enumdirection = movingobjectpositionblock.getDirection();
 
-                this.player.resetLastActionTime();
-                int i = this.player.level.getMaxBuildHeight();
+            this.player.resetLastActionTime();
+            int i = this.player.level.getMaxBuildHeight();
 
-                if (blockposition.getY() < i) {
-                    if (this.awaitingPositionFromClient == null && this.player.distanceToSqr((double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D) < 64.0D && (worldserver.mayInteract(this.player, blockposition)  || (worldserver.paperConfig().spawn.allowUsingSignsInsideSpawnProtection && worldserver.getBlockState(blockposition).getBlock() instanceof net.minecraft.world.level.block.SignBlock))) { // Paper - sign check
-                        this.player.stopUsingItem(); // CraftBukkit - SPIGOT-4706
-                        InteractionResult enuminteractionresult = this.player.gameMode.useItemOn(this.player, worldserver, itemstack, enumhand, movingobjectpositionblock);
+            if (blockposition.getY() < i) {
+                if (this.awaitingPositionFromClient == null && this.player.distanceToSqr((double) blockposition.getX() + 0.5D, (double) blockposition.getY() + 0.5D, (double) blockposition.getZ() + 0.5D) < 64.0D && (worldserver.mayInteract(this.player, blockposition) || (worldserver.paperConfig().spawn.allowUsingSignsInsideSpawnProtection && worldserver.getBlockState(blockposition).getBlock() instanceof net.minecraft.world.level.block.SignBlock))) { // Paper - sign check
+                    this.player.stopUsingItem(); // CraftBukkit - SPIGOT-4706
+                    InteractionResult enuminteractionresult = this.player.gameMode.useItemOn(this.player, worldserver, itemstack, enumhand, movingobjectpositionblock);
 
-                        if (enumdirection == Direction.UP && !enuminteractionresult.consumesAction() && blockposition.getY() >= i - 1 && ServerGamePacketListenerImpl.wasBlockPlacementAttempt(this.player, itemstack)) {
-                            MutableComponent ichatmutablecomponent = Component.translatable("build.tooHigh", i - 1).withStyle(ChatFormatting.RED);
+                    if (enumdirection == Direction.UP && !enuminteractionresult.consumesAction() && blockposition.getY() >= i - 1 && ServerGamePacketListenerImpl.wasBlockPlacementAttempt(this.player, itemstack)) {
+                        MutableComponent ichatmutablecomponent = Component.translatable("build.tooHigh", i - 1).withStyle(ChatFormatting.RED);
 
-                            this.player.sendSystemMessage(ichatmutablecomponent, true);
-                        } else if (enuminteractionresult.shouldSwing() && !this.player.gameMode.interactResult) { // Paper
-                            this.player.swing(enumhand, true);
-                        }
+                        this.player.sendSystemMessage(ichatmutablecomponent, true);
+                    } else if (enuminteractionresult.shouldSwing() && !this.player.gameMode.interactResult) { // Paper
+                        this.player.swing(enumhand, true);
                     }
-                } else {
-                    MutableComponent ichatmutablecomponent1 = Component.translatable("build.tooHigh", i - 1).withStyle(ChatFormatting.RED);
-
-                    this.player.sendSystemMessage(ichatmutablecomponent1, true);
                 }
-
-                this.player.connection.send(new ClientboundBlockUpdatePacket(worldserver, blockposition));
-                this.player.connection.send(new ClientboundBlockUpdatePacket(worldserver, blockposition.relative(enumdirection)));
             } else {
-                ServerGamePacketListenerImpl.LOGGER.warn("Rejecting UseItemOnPacket from {}: Location {} too far away from hit block {}.", new Object[]{this.player.getGameProfile().getName(), vec3d, blockposition});
+                MutableComponent ichatmutablecomponent1 = Component.translatable("build.tooHigh", i - 1).withStyle(ChatFormatting.RED);
+
+                this.player.sendSystemMessage(ichatmutablecomponent1, true);
             }
+
+            this.player.connection.send(new ClientboundBlockUpdatePacket(worldserver, blockposition));
+            this.player.connection.send(new ClientboundBlockUpdatePacket(worldserver, blockposition.relative(enumdirection)));
         }
     }
 
