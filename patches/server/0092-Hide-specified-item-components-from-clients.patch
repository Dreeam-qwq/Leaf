From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: TheFloodDragon <1610105206@qq.com>
Date: Sun, 4 Aug 2024 18:28:32 +0800
Subject: [PATCH] Hide specified item components from clients


diff --git a/src/main/java/net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket.java b/src/main/java/net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket.java
index 63f6a2437da9363786b55af0a7cbc5373232d35b..52e3ef5db7b176fbb4637d902ebf8328e9fe255a 100644
--- a/src/main/java/net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket.java
+++ b/src/main/java/net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket.java
@@ -21,14 +21,14 @@ public class ClientboundContainerSetSlotPacket implements Packet<ClientGamePacke
         this.containerId = syncId;
         this.stateId = revision;
         this.slot = slot;
-        this.itemStack = stack.copy();
+        this.itemStack = org.dreeam.leaf.util.item.ItemStackObfuscator.stripMeta(stack.copy(), true); // Leaf - Hide specified item components
     }
 
     private ClientboundContainerSetSlotPacket(RegistryFriendlyByteBuf buf) {
         this.containerId = buf.readByte();
         this.stateId = buf.readVarInt();
         this.slot = buf.readShort();
-        this.itemStack = ItemStack.OPTIONAL_STREAM_CODEC.decode(buf);
+        this.itemStack = org.dreeam.leaf.util.item.ItemStackObfuscator.stripMeta(ItemStack.OPTIONAL_STREAM_CODEC.decode(buf), true); // Leaf - Hide specified item components
     }
 
     private void write(RegistryFriendlyByteBuf buf) {
diff --git a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
index c491291b522aebf34c7d990d2b485d1a0d19cdcd..07274d43d7d9163f1b2db75ac9af53e50906dd73 100644
--- a/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
+++ b/src/main/java/net/minecraft/world/inventory/AbstractContainerMenu.java
@@ -314,7 +314,7 @@ public abstract class AbstractContainerMenu {
         if (!this.suppressRemoteUpdates) {
             ItemStack itemstack1 = (ItemStack) this.remoteSlots.get(slot);
 
-            if (!ItemStack.matches(itemstack1, stack)) {
+            if (!ItemStack.matches(org.dreeam.leaf.util.item.ItemStackObfuscator.stripMeta(itemstack1, true), org.dreeam.leaf.util.item.ItemStackObfuscator.stripMeta(stack, true))) { // Leaf - Hide specified item components
                 ItemStack itemstack2 = (ItemStack) copySupplier.get();
 
                 this.remoteSlots.set(slot, itemstack2);
@@ -342,7 +342,7 @@ public abstract class AbstractContainerMenu {
 
     private void synchronizeCarriedToRemote() {
         if (!this.suppressRemoteUpdates) {
-            if (!ItemStack.matches(this.getCarried(), this.remoteCarried)) {
+            if (!ItemStack.matches(org.dreeam.leaf.util.item.ItemStackObfuscator.stripMeta(this.getCarried(), true), org.dreeam.leaf.util.item.ItemStackObfuscator.stripMeta(this.remoteCarried, true))) { // Leaf - Hide specified item components
                 this.remoteCarried = this.getCarried().copy();
                 if (this.synchronizer != null) {
                     this.synchronizer.sendCarriedChange(this, this.remoteCarried);
diff --git a/src/main/java/org/dreeam/leaf/config/modules/misc/HiddenItemComponents.java b/src/main/java/org/dreeam/leaf/config/modules/misc/HiddenItemComponents.java
new file mode 100644
index 0000000000000000000000000000000000000000..01a1454561a1eed291860f1fd92a35a9b83b348d
--- /dev/null
+++ b/src/main/java/org/dreeam/leaf/config/modules/misc/HiddenItemComponents.java
@@ -0,0 +1,43 @@
+package org.dreeam.leaf.config.modules.misc;
+
+import net.minecraft.core.component.DataComponentType;
+import net.minecraft.core.registries.BuiltInRegistries;
+import net.minecraft.resources.ResourceLocation;
+import org.dreeam.leaf.config.ConfigModules;
+import org.dreeam.leaf.config.EnumConfigCategory;
+import org.dreeam.leaf.config.LeafConfig;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+public class HiddenItemComponents extends ConfigModules {
+
+    public String getBasePath() {
+        return EnumConfigCategory.MISC.getBaseKeyName();
+    }
+
+    public static List<DataComponentType<?>> hiddenItemComponentTypes = Collections.emptyList();
+
+    @Override
+    public void onLoaded() {
+        List<String> componentIds = config.getList(getBasePath() + ".hidden-item-components", Collections.emptyList(), """
+                Controls whether specified component information is sent to other players' clients.
+                This may break resource packs that rely on this information when observing other players.
+                The configuration is very similar to [https://docs.papermc.io/paper/reference/world-configuration#anticheat_obfuscation_items].
+                But the patch [Paper/server/Hide-unnecessary-itemmeta-from-clients] has been removed.
+                It needs a component type list, incorrect things will not work.
+                You can fill it with ["custom_data"] to hide components of CUSTOM_DATA to avoid some frequent client animations.
+                NOTICE: You must know what you're filling in and how it works!
+                """);
+        List<DataComponentType<?>> types = new ArrayList<>(componentIds.size());
+        for (String id : componentIds) {
+            // Find and check
+            DataComponentType<?> type = BuiltInRegistries.DATA_COMPONENT_TYPE.get(ResourceLocation.parse(id));
+            if (type != null) types.add(type);
+            else LeafConfig.LOGGER.warn("Unknown component type: {}", id);
+        }
+        hiddenItemComponentTypes = types;
+    }
+
+}
diff --git a/src/main/java/org/dreeam/leaf/util/item/ItemStackObfuscator.java b/src/main/java/org/dreeam/leaf/util/item/ItemStackObfuscator.java
new file mode 100644
index 0000000000000000000000000000000000000000..688a4f84424759c894735b6dc84d91aabf7f9d1d
--- /dev/null
+++ b/src/main/java/org/dreeam/leaf/util/item/ItemStackObfuscator.java
@@ -0,0 +1,25 @@
+package org.dreeam.leaf.util.item;
+
+import net.minecraft.core.component.DataComponentType;
+import net.minecraft.world.item.ItemStack;
+import org.dreeam.leaf.config.modules.misc.HiddenItemComponents;
+
+public class ItemStackObfuscator {
+
+    // Leaf start - Hide specified item components
+    public static ItemStack stripMeta(final ItemStack itemStack, final boolean copyItemStack) {
+        if (itemStack.isEmpty() || itemStack.getComponentsPatch().isEmpty()) return itemStack;
+
+        final ItemStack copy = copyItemStack ? itemStack.copy() : itemStack;
+
+        // Remove specified types
+        for (DataComponentType<?> hiddenType : HiddenItemComponents.hiddenItemComponentTypes) {
+            // Only remove, no others
+            copy.remove(hiddenType);
+        }
+
+        return copy;
+    }
+    // Leaf end - Hide specified item components
+
+}
